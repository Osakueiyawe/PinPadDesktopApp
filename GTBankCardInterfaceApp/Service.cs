//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.18020.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback TWIGPOSTellerOperationCompleted;
    
    private System.Threading.SendOrPostCallback TWIGINSKEYOperationCompleted;
    
    private System.Threading.SendOrPostCallback TWIGPINVERPOperationCompleted;
    
    private System.Threading.SendOrPostCallback TWIGPINVEROperationCompleted;
    
    private System.Threading.SendOrPostCallback TWIGPINWEBPOperationCompleted;
    
    private System.Threading.SendOrPostCallback TWIGPINIVRPOperationCompleted;
    
    private System.Threading.SendOrPostCallback TWIGPINWEBCardOperationCompleted;
    
    /// <remarks/>
    public Service() {
        this.Url = "http://10.0.6.181/TWIGPINp/service.asmx";
    }
    
    /// <remarks/>
    public event TWIGPOSTellerCompletedEventHandler TWIGPOSTellerCompleted;
    
    /// <remarks/>
    public event TWIGINSKEYCompletedEventHandler TWIGINSKEYCompleted;
    
    /// <remarks/>
    public event TWIGPINVERPCompletedEventHandler TWIGPINVERPCompleted;
    
    /// <remarks/>
    public event TWIGPINVERCompletedEventHandler TWIGPINVERCompleted;
    
    /// <remarks/>
    public event TWIGPINWEBPCompletedEventHandler TWIGPINWEBPCompleted;
    
    /// <remarks/>
    public event TWIGPINIVRPCompletedEventHandler TWIGPINIVRPCompleted;
    
    /// <remarks/>
    public event TWIGPINWEBCardCompletedEventHandler TWIGPINWEBCardCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TWIGPOSTeller", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string TWIGPOSTeller(string TermID, string TermSerial) {
        object[] results = this.Invoke("TWIGPOSTeller", new object[] {
                    TermID,
                    TermSerial});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginTWIGPOSTeller(string TermID, string TermSerial, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("TWIGPOSTeller", new object[] {
                    TermID,
                    TermSerial}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndTWIGPOSTeller(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void TWIGPOSTellerAsync(string TermID, string TermSerial) {
        this.TWIGPOSTellerAsync(TermID, TermSerial, null);
    }
    
    /// <remarks/>
    public void TWIGPOSTellerAsync(string TermID, string TermSerial, object userState) {
        if ((this.TWIGPOSTellerOperationCompleted == null)) {
            this.TWIGPOSTellerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTWIGPOSTellerOperationCompleted);
        }
        this.InvokeAsync("TWIGPOSTeller", new object[] {
                    TermID,
                    TermSerial}, this.TWIGPOSTellerOperationCompleted, userState);
    }
    
    private void OnTWIGPOSTellerOperationCompleted(object arg) {
        if ((this.TWIGPOSTellerCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TWIGPOSTellerCompleted(this, new TWIGPOSTellerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TWIGINSKEY", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string TWIGINSKEY(string KeyCustA, string KeyCustB, string Authorizer, string KeyQTY, string BUCode) {
        object[] results = this.Invoke("TWIGINSKEY", new object[] {
                    KeyCustA,
                    KeyCustB,
                    Authorizer,
                    KeyQTY,
                    BUCode});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginTWIGINSKEY(string KeyCustA, string KeyCustB, string Authorizer, string KeyQTY, string BUCode, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("TWIGINSKEY", new object[] {
                    KeyCustA,
                    KeyCustB,
                    Authorizer,
                    KeyQTY,
                    BUCode}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndTWIGINSKEY(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void TWIGINSKEYAsync(string KeyCustA, string KeyCustB, string Authorizer, string KeyQTY, string BUCode) {
        this.TWIGINSKEYAsync(KeyCustA, KeyCustB, Authorizer, KeyQTY, BUCode, null);
    }
    
    /// <remarks/>
    public void TWIGINSKEYAsync(string KeyCustA, string KeyCustB, string Authorizer, string KeyQTY, string BUCode, object userState) {
        if ((this.TWIGINSKEYOperationCompleted == null)) {
            this.TWIGINSKEYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTWIGINSKEYOperationCompleted);
        }
        this.InvokeAsync("TWIGINSKEY", new object[] {
                    KeyCustA,
                    KeyCustB,
                    Authorizer,
                    KeyQTY,
                    BUCode}, this.TWIGINSKEYOperationCompleted, userState);
    }
    
    private void OnTWIGINSKEYOperationCompleted(object arg) {
        if ((this.TWIGINSKEYCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TWIGINSKEYCompleted(this, new TWIGINSKEYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TWIGPINVERP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string TWIGPINVERP(string CardNo, string ExpiryDate, string Poffset, string CardType) {
        object[] results = this.Invoke("TWIGPINVERP", new object[] {
                    CardNo,
                    ExpiryDate,
                    Poffset,
                    CardType});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginTWIGPINVERP(string CardNo, string ExpiryDate, string Poffset, string CardType, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("TWIGPINVERP", new object[] {
                    CardNo,
                    ExpiryDate,
                    Poffset,
                    CardType}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndTWIGPINVERP(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void TWIGPINVERPAsync(string CardNo, string ExpiryDate, string Poffset, string CardType) {
        this.TWIGPINVERPAsync(CardNo, ExpiryDate, Poffset, CardType, null);
    }
    
    /// <remarks/>
    public void TWIGPINVERPAsync(string CardNo, string ExpiryDate, string Poffset, string CardType, object userState) {
        if ((this.TWIGPINVERPOperationCompleted == null)) {
            this.TWIGPINVERPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTWIGPINVERPOperationCompleted);
        }
        this.InvokeAsync("TWIGPINVERP", new object[] {
                    CardNo,
                    ExpiryDate,
                    Poffset,
                    CardType}, this.TWIGPINVERPOperationCompleted, userState);
    }
    
    private void OnTWIGPINVERPOperationCompleted(object arg) {
        if ((this.TWIGPINVERPCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TWIGPINVERPCompleted(this, new TWIGPINVERPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TWIGPINVER", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string TWIGPINVER(string Tr2, string Poffset, string CardType) {
        object[] results = this.Invoke("TWIGPINVER", new object[] {
                    Tr2,
                    Poffset,
                    CardType});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginTWIGPINVER(string Tr2, string Poffset, string CardType, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("TWIGPINVER", new object[] {
                    Tr2,
                    Poffset,
                    CardType}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndTWIGPINVER(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void TWIGPINVERAsync(string Tr2, string Poffset, string CardType) {
        this.TWIGPINVERAsync(Tr2, Poffset, CardType, null);
    }
    
    /// <remarks/>
    public void TWIGPINVERAsync(string Tr2, string Poffset, string CardType, object userState) {
        if ((this.TWIGPINVEROperationCompleted == null)) {
            this.TWIGPINVEROperationCompleted = new System.Threading.SendOrPostCallback(this.OnTWIGPINVEROperationCompleted);
        }
        this.InvokeAsync("TWIGPINVER", new object[] {
                    Tr2,
                    Poffset,
                    CardType}, this.TWIGPINVEROperationCompleted, userState);
    }
    
    private void OnTWIGPINVEROperationCompleted(object arg) {
        if ((this.TWIGPINVERCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TWIGPINVERCompleted(this, new TWIGPINVERCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TWIGPINWEBP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string TWIGPINWEBP(string AccountNumber, string PAN4, string ExipryDate, string SeqNo, string CardType, string CardID) {
        object[] results = this.Invoke("TWIGPINWEBP", new object[] {
                    AccountNumber,
                    PAN4,
                    ExipryDate,
                    SeqNo,
                    CardType,
                    CardID});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginTWIGPINWEBP(string AccountNumber, string PAN4, string ExipryDate, string SeqNo, string CardType, string CardID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("TWIGPINWEBP", new object[] {
                    AccountNumber,
                    PAN4,
                    ExipryDate,
                    SeqNo,
                    CardType,
                    CardID}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndTWIGPINWEBP(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void TWIGPINWEBPAsync(string AccountNumber, string PAN4, string ExipryDate, string SeqNo, string CardType, string CardID) {
        this.TWIGPINWEBPAsync(AccountNumber, PAN4, ExipryDate, SeqNo, CardType, CardID, null);
    }
    
    /// <remarks/>
    public void TWIGPINWEBPAsync(string AccountNumber, string PAN4, string ExipryDate, string SeqNo, string CardType, string CardID, object userState) {
        if ((this.TWIGPINWEBPOperationCompleted == null)) {
            this.TWIGPINWEBPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTWIGPINWEBPOperationCompleted);
        }
        this.InvokeAsync("TWIGPINWEBP", new object[] {
                    AccountNumber,
                    PAN4,
                    ExipryDate,
                    SeqNo,
                    CardType,
                    CardID}, this.TWIGPINWEBPOperationCompleted, userState);
    }
    
    private void OnTWIGPINWEBPOperationCompleted(object arg) {
        if ((this.TWIGPINWEBPCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TWIGPINWEBPCompleted(this, new TWIGPINWEBPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TWIGPINIVRP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string TWIGPINIVRP(string AccountNumber, string PAN4, string ExipryDate, string SeqNo, string CardType, string CardID) {
        object[] results = this.Invoke("TWIGPINIVRP", new object[] {
                    AccountNumber,
                    PAN4,
                    ExipryDate,
                    SeqNo,
                    CardType,
                    CardID});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginTWIGPINIVRP(string AccountNumber, string PAN4, string ExipryDate, string SeqNo, string CardType, string CardID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("TWIGPINIVRP", new object[] {
                    AccountNumber,
                    PAN4,
                    ExipryDate,
                    SeqNo,
                    CardType,
                    CardID}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndTWIGPINIVRP(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void TWIGPINIVRPAsync(string AccountNumber, string PAN4, string ExipryDate, string SeqNo, string CardType, string CardID) {
        this.TWIGPINIVRPAsync(AccountNumber, PAN4, ExipryDate, SeqNo, CardType, CardID, null);
    }
    
    /// <remarks/>
    public void TWIGPINIVRPAsync(string AccountNumber, string PAN4, string ExipryDate, string SeqNo, string CardType, string CardID, object userState) {
        if ((this.TWIGPINIVRPOperationCompleted == null)) {
            this.TWIGPINIVRPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTWIGPINIVRPOperationCompleted);
        }
        this.InvokeAsync("TWIGPINIVRP", new object[] {
                    AccountNumber,
                    PAN4,
                    ExipryDate,
                    SeqNo,
                    CardType,
                    CardID}, this.TWIGPINIVRPOperationCompleted, userState);
    }
    
    private void OnTWIGPINIVRPOperationCompleted(object arg) {
        if ((this.TWIGPINIVRPCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TWIGPINIVRPCompleted(this, new TWIGPINIVRPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TWIGPINWEBCard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string TWIGPINWEBCard(string AccountNumber, string ExipryDate, string SeqNo, string CardType, string CardID) {
        object[] results = this.Invoke("TWIGPINWEBCard", new object[] {
                    AccountNumber,
                    ExipryDate,
                    SeqNo,
                    CardType,
                    CardID});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginTWIGPINWEBCard(string AccountNumber, string ExipryDate, string SeqNo, string CardType, string CardID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("TWIGPINWEBCard", new object[] {
                    AccountNumber,
                    ExipryDate,
                    SeqNo,
                    CardType,
                    CardID}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndTWIGPINWEBCard(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void TWIGPINWEBCardAsync(string AccountNumber, string ExipryDate, string SeqNo, string CardType, string CardID) {
        this.TWIGPINWEBCardAsync(AccountNumber, ExipryDate, SeqNo, CardType, CardID, null);
    }
    
    /// <remarks/>
    public void TWIGPINWEBCardAsync(string AccountNumber, string ExipryDate, string SeqNo, string CardType, string CardID, object userState) {
        if ((this.TWIGPINWEBCardOperationCompleted == null)) {
            this.TWIGPINWEBCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTWIGPINWEBCardOperationCompleted);
        }
        this.InvokeAsync("TWIGPINWEBCard", new object[] {
                    AccountNumber,
                    ExipryDate,
                    SeqNo,
                    CardType,
                    CardID}, this.TWIGPINWEBCardOperationCompleted, userState);
    }
    
    private void OnTWIGPINWEBCardOperationCompleted(object arg) {
        if ((this.TWIGPINWEBCardCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TWIGPINWEBCardCompleted(this, new TWIGPINWEBCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void TWIGPOSTellerCompletedEventHandler(object sender, TWIGPOSTellerCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TWIGPOSTellerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal TWIGPOSTellerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void TWIGINSKEYCompletedEventHandler(object sender, TWIGINSKEYCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TWIGINSKEYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal TWIGINSKEYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void TWIGPINVERPCompletedEventHandler(object sender, TWIGPINVERPCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TWIGPINVERPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal TWIGPINVERPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void TWIGPINVERCompletedEventHandler(object sender, TWIGPINVERCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TWIGPINVERCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal TWIGPINVERCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void TWIGPINWEBPCompletedEventHandler(object sender, TWIGPINWEBPCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TWIGPINWEBPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal TWIGPINWEBPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void TWIGPINIVRPCompletedEventHandler(object sender, TWIGPINIVRPCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TWIGPINIVRPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal TWIGPINIVRPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
public delegate void TWIGPINWEBCardCompletedEventHandler(object sender, TWIGPINWEBCardCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TWIGPINWEBCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal TWIGPINWEBCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}
