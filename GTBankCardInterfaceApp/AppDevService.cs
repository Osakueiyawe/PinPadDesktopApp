//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Configuration;
using System.Data;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.8.3928.0.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="AppDevServiceSoap", Namespace="http://tempuri.org/")]
public partial class AppDevService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback getcusDepositDetailsOldAccountOperationCompleted;
    
    private System.Threading.SendOrPostCallback ConvertToNubanOperationCompleted;
    
    private System.Threading.SendOrPostCallback ConvertToOldAccountNumberOperationCompleted;
    
    private System.Threading.SendOrPostCallback getCustomerIDOperationCompleted;
    
    private System.Threading.SendOrPostCallback getLogosOperationCompleted;
    
    private System.Threading.SendOrPostCallback InitiateTransactionOperationCompleted;
    
    private System.Threading.SendOrPostCallback InitiateTransactionOfflineOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateTransactionOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateTransactionForApprovalOperationCompleted;
    
    private System.Threading.SendOrPostCallback getOnlineDepositPendingDataOperationCompleted;
    
    private System.Threading.SendOrPostCallback getOnlineWithdrawalPendingDataOperationCompleted;
    
    private System.Threading.SendOrPostCallback getOnlinePendingPrintingDataOperationCompleted;
    
    private System.Threading.SendOrPostCallback getReceiptResetPendingDataOperationCompleted;
    
    private System.Threading.SendOrPostCallback getPinPadTransactionHistoryOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateTransactionForReceiptReprintOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdatePrintStatusOperationCompleted;
    
    private System.Threading.SendOrPostCallback InsertIntoCentralDBOperationCompleted;
    
    private System.Threading.SendOrPostCallback IsInProgressOperationCompleted;
    
    private System.Threading.SendOrPostCallback getOIOpportunitiesOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateOIOpportunitiesOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateOISelectionbyTellerOperationCompleted;
    
    private System.Threading.SendOrPostCallback FastTrackGetPendingOperationCompleted;
    
    private System.Threading.SendOrPostCallback FastTrackUpdateTellerOperationCompleted;
    
    private System.Threading.SendOrPostCallback FastTrackUpdateSupervisorOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetNubanAccountWithFundsOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetVerificationResponseOperationCompleted;
    
    private System.Threading.SendOrPostCallback checkrestrictionOperationCompleted;
    
    private System.Threading.SendOrPostCallback checkrestrictionBraCusOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetAccountdetailsfromPhoneOperationCompleted;
    
    private System.Threading.SendOrPostCallback EncryptOperationCompleted;
    
    private System.Threading.SendOrPostCallback ValidateEncryptedAdminUserOperationCompleted;
    
    private System.Threading.SendOrPostCallback ValidateAdminUserOffSiteOperationCompleted;
    
    private System.Threading.SendOrPostCallback ValidateAdminUserOffSitewithAppverOperationCompleted;
    
    private System.Threading.SendOrPostCallback ValidateUserOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetCustomerNameOperationCompleted;
    
    private System.Threading.SendOrPostCallback TransferOperationCompleted;
    
    private System.Threading.SendOrPostCallback TransferChargesandVATOperationCompleted;
    
    private System.Threading.SendOrPostCallback TransferChargesOperationCompleted;
    
    private System.Threading.SendOrPostCallback SendSMSOperationCompleted;
    
    private System.Threading.SendOrPostCallback SendEmailOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetApplicationRoleUsersOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetCustomerDetailsOperationCompleted;
    
    private System.Threading.SendOrPostCallback ValidateAccountOperationCompleted;
    
    private System.Threading.SendOrPostCallback CheckUserFlagOperationCompleted;
    
    private System.Threading.SendOrPostCallback ResetUserFlagOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetBasisCustomerDetailsOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetWithdrawaldetailsfromMobileOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetBasisCustomerDetailsFullKeyOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetBasisTellerTillAcctOperationCompleted;
    
    private System.Threading.SendOrPostCallback getTellerLimitPinPadOperationCompleted;
    
    private System.Threading.SendOrPostCallback getPinPadValuesOperationCompleted;
    
    private System.Threading.SendOrPostCallback getTransactionHistoryOperationCompleted;
    
    private System.Threading.SendOrPostCallback getTranSeqOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetBranchTellerOperationCompleted;
    
    private System.Threading.SendOrPostCallback CheckForPendingTransTellerOperationCompleted;
    
    private System.Threading.SendOrPostCallback getcusDepositDetailsOperationCompleted;
    
    /// <remarks/>
    public AppDevService() {
        this.Url = ConfigurationManager.AppSettings["PINPADURL"].ToString();
    }
    
    /// <remarks/>
    public event getcusDepositDetailsOldAccountCompletedEventHandler getcusDepositDetailsOldAccountCompleted;
    
    /// <remarks/>
    public event ConvertToNubanCompletedEventHandler ConvertToNubanCompleted;
    
    /// <remarks/>
    public event ConvertToOldAccountNumberCompletedEventHandler ConvertToOldAccountNumberCompleted;
    
    /// <remarks/>
    public event getCustomerIDCompletedEventHandler getCustomerIDCompleted;
    
    /// <remarks/>
    public event getLogosCompletedEventHandler getLogosCompleted;
    
    /// <remarks/>
    public event InitiateTransactionCompletedEventHandler InitiateTransactionCompleted;
    
    /// <remarks/>
    public event InitiateTransactionOfflineCompletedEventHandler InitiateTransactionOfflineCompleted;
    
    /// <remarks/>
    public event UpdateTransactionCompletedEventHandler UpdateTransactionCompleted;
    
    /// <remarks/>
    public event UpdateTransactionForApprovalCompletedEventHandler UpdateTransactionForApprovalCompleted;
    
    /// <remarks/>
    public event getOnlineDepositPendingDataCompletedEventHandler getOnlineDepositPendingDataCompleted;
    
    /// <remarks/>
    public event getOnlineWithdrawalPendingDataCompletedEventHandler getOnlineWithdrawalPendingDataCompleted;
    
    /// <remarks/>
    public event getOnlinePendingPrintingDataCompletedEventHandler getOnlinePendingPrintingDataCompleted;
    
    /// <remarks/>
    public event getReceiptResetPendingDataCompletedEventHandler getReceiptResetPendingDataCompleted;
    
    /// <remarks/>
    public event getPinPadTransactionHistoryCompletedEventHandler getPinPadTransactionHistoryCompleted;
    
    /// <remarks/>
    public event UpdateTransactionForReceiptReprintCompletedEventHandler UpdateTransactionForReceiptReprintCompleted;
    
    /// <remarks/>
    public event UpdatePrintStatusCompletedEventHandler UpdatePrintStatusCompleted;
    
    /// <remarks/>
    public event InsertIntoCentralDBCompletedEventHandler InsertIntoCentralDBCompleted;
    
    /// <remarks/>
    public event IsInProgressCompletedEventHandler IsInProgressCompleted;
    
    /// <remarks/>
    public event getOIOpportunitiesCompletedEventHandler getOIOpportunitiesCompleted;
    
    /// <remarks/>
    public event UpdateOIOpportunitiesCompletedEventHandler UpdateOIOpportunitiesCompleted;
    
    /// <remarks/>
    public event UpdateOISelectionbyTellerCompletedEventHandler UpdateOISelectionbyTellerCompleted;
    
    /// <remarks/>
    public event FastTrackGetPendingCompletedEventHandler FastTrackGetPendingCompleted;
    
    /// <remarks/>
    public event FastTrackUpdateTellerCompletedEventHandler FastTrackUpdateTellerCompleted;
    
    /// <remarks/>
    public event FastTrackUpdateSupervisorCompletedEventHandler FastTrackUpdateSupervisorCompleted;
    
    /// <remarks/>
    public event GetNubanAccountWithFundsCompletedEventHandler GetNubanAccountWithFundsCompleted;
    
    /// <remarks/>
    public event GetVerificationResponseCompletedEventHandler GetVerificationResponseCompleted;
    
    /// <remarks/>
    public event checkrestrictionCompletedEventHandler checkrestrictionCompleted;
    
    /// <remarks/>
    public event checkrestrictionBraCusCompletedEventHandler checkrestrictionBraCusCompleted;
    
    /// <remarks/>
    public event GetAccountdetailsfromPhoneCompletedEventHandler GetAccountdetailsfromPhoneCompleted;
    
    /// <remarks/>
    public event EncryptCompletedEventHandler EncryptCompleted;
    
    /// <remarks/>
    public event ValidateEncryptedAdminUserCompletedEventHandler ValidateEncryptedAdminUserCompleted;
    
    /// <remarks/>
    public event ValidateAdminUserOffSiteCompletedEventHandler ValidateAdminUserOffSiteCompleted;
    
    /// <remarks/>
    public event ValidateAdminUserOffSitewithAppverCompletedEventHandler ValidateAdminUserOffSitewithAppverCompleted;
    
    /// <remarks/>
    public event ValidateUserCompletedEventHandler ValidateUserCompleted;
    
    /// <remarks/>
    public event GetCustomerNameCompletedEventHandler GetCustomerNameCompleted;
    
    /// <remarks/>
    public event TransferCompletedEventHandler TransferCompleted;
    
    /// <remarks/>
    public event TransferChargesandVATCompletedEventHandler TransferChargesandVATCompleted;
    
    /// <remarks/>
    public event TransferChargesCompletedEventHandler TransferChargesCompleted;
    
    /// <remarks/>
    public event SendSMSCompletedEventHandler SendSMSCompleted;
    
    /// <remarks/>
    public event SendEmailCompletedEventHandler SendEmailCompleted;
    
    /// <remarks/>
    public event GetApplicationRoleUsersCompletedEventHandler GetApplicationRoleUsersCompleted;
    
    /// <remarks/>
    public event GetCustomerDetailsCompletedEventHandler GetCustomerDetailsCompleted;
    
    /// <remarks/>
    public event ValidateAccountCompletedEventHandler ValidateAccountCompleted;
    
    /// <remarks/>
    public event CheckUserFlagCompletedEventHandler CheckUserFlagCompleted;
    
    /// <remarks/>
    public event ResetUserFlagCompletedEventHandler ResetUserFlagCompleted;
    
    /// <remarks/>
    public event GetBasisCustomerDetailsCompletedEventHandler GetBasisCustomerDetailsCompleted;
    
    /// <remarks/>
    public event GetWithdrawaldetailsfromMobileCompletedEventHandler GetWithdrawaldetailsfromMobileCompleted;
    
    /// <remarks/>
    public event GetBasisCustomerDetailsFullKeyCompletedEventHandler GetBasisCustomerDetailsFullKeyCompleted;
    
    /// <remarks/>
    public event GetBasisTellerTillAcctCompletedEventHandler GetBasisTellerTillAcctCompleted;
    
    /// <remarks/>
    public event getTellerLimitPinPadCompletedEventHandler getTellerLimitPinPadCompleted;
    
    /// <remarks/>
    public event getPinPadValuesCompletedEventHandler getPinPadValuesCompleted;
    
    /// <remarks/>
    public event getTransactionHistoryCompletedEventHandler getTransactionHistoryCompleted;
    
    /// <remarks/>
    public event getTranSeqCompletedEventHandler getTranSeqCompleted;
    
    /// <remarks/>
    public event GetBranchTellerCompletedEventHandler GetBranchTellerCompleted;
    
    /// <remarks/>
    public event CheckForPendingTransTellerCompletedEventHandler CheckForPendingTransTellerCompleted;
    
    /// <remarks/>
    public event getcusDepositDetailsCompletedEventHandler getcusDepositDetailsCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getcusDepositDetailsOldAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string[] getcusDepositDetailsOldAccount(string OldAccountNumber) {
        object[] results = this.Invoke("getcusDepositDetailsOldAccount", new object[] {
                    OldAccountNumber});
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetcusDepositDetailsOldAccount(string OldAccountNumber, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getcusDepositDetailsOldAccount", new object[] {
                    OldAccountNumber}, callback, asyncState);
    }
    
    /// <remarks/>
    public string[] EndgetcusDepositDetailsOldAccount(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public void getcusDepositDetailsOldAccountAsync(string OldAccountNumber) {
        this.getcusDepositDetailsOldAccountAsync(OldAccountNumber, null);
    }
    
    /// <remarks/>
    public void getcusDepositDetailsOldAccountAsync(string OldAccountNumber, object userState) {
        if ((this.getcusDepositDetailsOldAccountOperationCompleted == null)) {
            this.getcusDepositDetailsOldAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetcusDepositDetailsOldAccountOperationCompleted);
        }
        this.InvokeAsync("getcusDepositDetailsOldAccount", new object[] {
                    OldAccountNumber}, this.getcusDepositDetailsOldAccountOperationCompleted, userState);
    }
    
    private void OngetcusDepositDetailsOldAccountOperationCompleted(object arg) {
        if ((this.getcusDepositDetailsOldAccountCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getcusDepositDetailsOldAccountCompleted(this, new getcusDepositDetailsOldAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConvertToNuban", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string ConvertToNuban(string OldAccountNumber) {
        object[] results = this.Invoke("ConvertToNuban", new object[] {
                    OldAccountNumber});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginConvertToNuban(string OldAccountNumber, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ConvertToNuban", new object[] {
                    OldAccountNumber}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndConvertToNuban(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void ConvertToNubanAsync(string OldAccountNumber) {
        this.ConvertToNubanAsync(OldAccountNumber, null);
    }
    
    /// <remarks/>
    public void ConvertToNubanAsync(string OldAccountNumber, object userState) {
        if ((this.ConvertToNubanOperationCompleted == null)) {
            this.ConvertToNubanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConvertToNubanOperationCompleted);
        }
        this.InvokeAsync("ConvertToNuban", new object[] {
                    OldAccountNumber}, this.ConvertToNubanOperationCompleted, userState);
    }
    
    private void OnConvertToNubanOperationCompleted(object arg) {
        if ((this.ConvertToNubanCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ConvertToNubanCompleted(this, new ConvertToNubanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConvertToOldAccountNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string ConvertToOldAccountNumber(string NubanAccountNumber) {
        object[] results = this.Invoke("ConvertToOldAccountNumber", new object[] {
                    NubanAccountNumber});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginConvertToOldAccountNumber(string NubanAccountNumber, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ConvertToOldAccountNumber", new object[] {
                    NubanAccountNumber}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndConvertToOldAccountNumber(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void ConvertToOldAccountNumberAsync(string NubanAccountNumber) {
        this.ConvertToOldAccountNumberAsync(NubanAccountNumber, null);
    }
    
    /// <remarks/>
    public void ConvertToOldAccountNumberAsync(string NubanAccountNumber, object userState) {
        if ((this.ConvertToOldAccountNumberOperationCompleted == null)) {
            this.ConvertToOldAccountNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConvertToOldAccountNumberOperationCompleted);
        }
        this.InvokeAsync("ConvertToOldAccountNumber", new object[] {
                    NubanAccountNumber}, this.ConvertToOldAccountNumberOperationCompleted, userState);
    }
    
    private void OnConvertToOldAccountNumberOperationCompleted(object arg) {
        if ((this.ConvertToOldAccountNumberCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ConvertToOldAccountNumberCompleted(this, new ConvertToOldAccountNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCustomerID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string[] getCustomerID(string param) {
        object[] results = this.Invoke("getCustomerID", new object[] {
                    param});
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetCustomerID(string param, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getCustomerID", new object[] {
                    param}, callback, asyncState);
    }
    
    /// <remarks/>
    public string[] EndgetCustomerID(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public void getCustomerIDAsync(string param) {
        this.getCustomerIDAsync(param, null);
    }
    
    /// <remarks/>
    public void getCustomerIDAsync(string param, object userState) {
        if ((this.getCustomerIDOperationCompleted == null)) {
            this.getCustomerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerIDOperationCompleted);
        }
        this.InvokeAsync("getCustomerID", new object[] {
                    param}, this.getCustomerIDOperationCompleted, userState);
    }
    
    private void OngetCustomerIDOperationCompleted(object arg) {
        if ((this.getCustomerIDCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getCustomerIDCompleted(this, new getCustomerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getLogos", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public object[] getLogos() {
        object[] results = this.Invoke("getLogos", new object[0]);
        return ((object[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetLogos(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getLogos", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public object[] EndgetLogos(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object[])(results[0]));
    }
    
    /// <remarks/>
    public void getLogosAsync() {
        this.getLogosAsync(null);
    }
    
    /// <remarks/>
    public void getLogosAsync(object userState) {
        if ((this.getLogosOperationCompleted == null)) {
            this.getLogosOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLogosOperationCompleted);
        }
        this.InvokeAsync("getLogos", new object[0], this.getLogosOperationCompleted, userState);
    }
    
    private void OngetLogosOperationCompleted(object arg) {
        if ((this.getLogosCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getLogosCompleted(this, new getLogosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InitiateTransaction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public ulong InitiateTransaction(string OrigbraCode, string tellerId, string customerAccountNo, decimal amount, string authmode, string transType, string cusName, string tellertill, string depname, string CardNumber, uint Stan, string MerchantID, string AuthCode, decimal AuthAmount, string cashanalysis) {
        object[] results = this.Invoke("InitiateTransaction", new object[] {
                    OrigbraCode,
                    tellerId,
                    customerAccountNo,
                    amount,
                    authmode,
                    transType,
                    cusName,
                    tellertill,
                    depname,
                    CardNumber,
                    Stan,
                    MerchantID,
                    AuthCode,
                    AuthAmount,
                    cashanalysis});
        return ((ulong)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginInitiateTransaction(
                string OrigbraCode, 
                string tellerId, 
                string customerAccountNo, 
                decimal amount, 
                string authmode, 
                string transType, 
                string cusName, 
                string tellertill, 
                string depname, 
                string CardNumber, 
                uint Stan, 
                string MerchantID, 
                string AuthCode, 
                decimal AuthAmount, 
                string cashanalysis, 
                System.AsyncCallback callback, 
                object asyncState) {
        return this.BeginInvoke("InitiateTransaction", new object[] {
                    OrigbraCode,
                    tellerId,
                    customerAccountNo,
                    amount,
                    authmode,
                    transType,
                    cusName,
                    tellertill,
                    depname,
                    CardNumber,
                    Stan,
                    MerchantID,
                    AuthCode,
                    AuthAmount,
                    cashanalysis}, callback, asyncState);
    }
    
    /// <remarks/>
    public ulong EndInitiateTransaction(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ulong)(results[0]));
    }
    
    /// <remarks/>
    public void InitiateTransactionAsync(string OrigbraCode, string tellerId, string customerAccountNo, decimal amount, string authmode, string transType, string cusName, string tellertill, string depname, string CardNumber, uint Stan, string MerchantID, string AuthCode, decimal AuthAmount, string cashanalysis) {
        this.InitiateTransactionAsync(OrigbraCode, tellerId, customerAccountNo, amount, authmode, transType, cusName, tellertill, depname, CardNumber, Stan, MerchantID, AuthCode, AuthAmount, cashanalysis, null);
    }
    
    /// <remarks/>
    public void InitiateTransactionAsync(
                string OrigbraCode, 
                string tellerId, 
                string customerAccountNo, 
                decimal amount, 
                string authmode, 
                string transType, 
                string cusName, 
                string tellertill, 
                string depname, 
                string CardNumber, 
                uint Stan, 
                string MerchantID, 
                string AuthCode, 
                decimal AuthAmount, 
                string cashanalysis, 
                object userState) {
        if ((this.InitiateTransactionOperationCompleted == null)) {
            this.InitiateTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateTransactionOperationCompleted);
        }
        this.InvokeAsync("InitiateTransaction", new object[] {
                    OrigbraCode,
                    tellerId,
                    customerAccountNo,
                    amount,
                    authmode,
                    transType,
                    cusName,
                    tellertill,
                    depname,
                    CardNumber,
                    Stan,
                    MerchantID,
                    AuthCode,
                    AuthAmount,
                    cashanalysis}, this.InitiateTransactionOperationCompleted, userState);
    }
    
    private void OnInitiateTransactionOperationCompleted(object arg) {
        if ((this.InitiateTransactionCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InitiateTransactionCompleted(this, new InitiateTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InitiateTransactionOffline", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public ulong InitiateTransactionOffline(string OrigbraCode, string tellerId, string customerAccountNo, decimal amount, string authmode, string transType, string cusName, string tellertill, string depname) {
        object[] results = this.Invoke("InitiateTransactionOffline", new object[] {
                    OrigbraCode,
                    tellerId,
                    customerAccountNo,
                    amount,
                    authmode,
                    transType,
                    cusName,
                    tellertill,
                    depname});
        return ((ulong)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginInitiateTransactionOffline(string OrigbraCode, string tellerId, string customerAccountNo, decimal amount, string authmode, string transType, string cusName, string tellertill, string depname, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("InitiateTransactionOffline", new object[] {
                    OrigbraCode,
                    tellerId,
                    customerAccountNo,
                    amount,
                    authmode,
                    transType,
                    cusName,
                    tellertill,
                    depname}, callback, asyncState);
    }
    
    /// <remarks/>
    public ulong EndInitiateTransactionOffline(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ulong)(results[0]));
    }
    
    /// <remarks/>
    public void InitiateTransactionOfflineAsync(string OrigbraCode, string tellerId, string customerAccountNo, decimal amount, string authmode, string transType, string cusName, string tellertill, string depname) {
        this.InitiateTransactionOfflineAsync(OrigbraCode, tellerId, customerAccountNo, amount, authmode, transType, cusName, tellertill, depname, null);
    }
    
    /// <remarks/>
    public void InitiateTransactionOfflineAsync(string OrigbraCode, string tellerId, string customerAccountNo, decimal amount, string authmode, string transType, string cusName, string tellertill, string depname, object userState) {
        if ((this.InitiateTransactionOfflineOperationCompleted == null)) {
            this.InitiateTransactionOfflineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateTransactionOfflineOperationCompleted);
        }
        this.InvokeAsync("InitiateTransactionOffline", new object[] {
                    OrigbraCode,
                    tellerId,
                    customerAccountNo,
                    amount,
                    authmode,
                    transType,
                    cusName,
                    tellertill,
                    depname}, this.InitiateTransactionOfflineOperationCompleted, userState);
    }
    
    private void OnInitiateTransactionOfflineOperationCompleted(object arg) {
        if ((this.InitiateTransactionOfflineCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InitiateTransactionOfflineCompleted(this, new InitiateTransactionOfflineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateTransaction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public ulong UpdateTransaction(string apprvTeller, ulong transId, string bracode, string acctno, string rmks, string status, string failreason, string authmode, string tellertill, string expl_code) {
        object[] results = this.Invoke("UpdateTransaction", new object[] {
                    apprvTeller,
                    transId,
                    bracode,
                    acctno,
                    rmks,
                    status,
                    failreason,
                    authmode,
                    tellertill,
                    expl_code});
        return ((ulong)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateTransaction(string apprvTeller, ulong transId, string bracode, string acctno, string rmks, string status, string failreason, string authmode, string tellertill, string expl_code, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateTransaction", new object[] {
                    apprvTeller,
                    transId,
                    bracode,
                    acctno,
                    rmks,
                    status,
                    failreason,
                    authmode,
                    tellertill,
                    expl_code}, callback, asyncState);
    }
    
    /// <remarks/>
    public ulong EndUpdateTransaction(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ulong)(results[0]));
    }
    
    /// <remarks/>
    public void UpdateTransactionAsync(string apprvTeller, ulong transId, string bracode, string acctno, string rmks, string status, string failreason, string authmode, string tellertill, string expl_code) {
        this.UpdateTransactionAsync(apprvTeller, transId, bracode, acctno, rmks, status, failreason, authmode, tellertill, expl_code, null);
    }
    
    /// <remarks/>
    public void UpdateTransactionAsync(string apprvTeller, ulong transId, string bracode, string acctno, string rmks, string status, string failreason, string authmode, string tellertill, string expl_code, object userState) {
        if ((this.UpdateTransactionOperationCompleted == null)) {
            this.UpdateTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTransactionOperationCompleted);
        }
        this.InvokeAsync("UpdateTransaction", new object[] {
                    apprvTeller,
                    transId,
                    bracode,
                    acctno,
                    rmks,
                    status,
                    failreason,
                    authmode,
                    tellertill,
                    expl_code}, this.UpdateTransactionOperationCompleted, userState);
    }
    
    private void OnUpdateTransactionOperationCompleted(object arg) {
        if ((this.UpdateTransactionCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateTransactionCompleted(this, new UpdateTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateTransactionForApproval", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public ulong UpdateTransactionForApproval(ulong transId) {
        object[] results = this.Invoke("UpdateTransactionForApproval", new object[] {
                    transId});
        return ((ulong)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateTransactionForApproval(ulong transId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateTransactionForApproval", new object[] {
                    transId}, callback, asyncState);
    }
    
    /// <remarks/>
    public ulong EndUpdateTransactionForApproval(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ulong)(results[0]));
    }
    
    /// <remarks/>
    public void UpdateTransactionForApprovalAsync(ulong transId) {
        this.UpdateTransactionForApprovalAsync(transId, null);
    }
    
    /// <remarks/>
    public void UpdateTransactionForApprovalAsync(ulong transId, object userState) {
        if ((this.UpdateTransactionForApprovalOperationCompleted == null)) {
            this.UpdateTransactionForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTransactionForApprovalOperationCompleted);
        }
        this.InvokeAsync("UpdateTransactionForApproval", new object[] {
                    transId}, this.UpdateTransactionForApprovalOperationCompleted, userState);
    }
    
    private void OnUpdateTransactionForApprovalOperationCompleted(object arg) {
        if ((this.UpdateTransactionForApprovalCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateTransactionForApprovalCompleted(this, new UpdateTransactionForApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getOnlineDepositPendingData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataTable getOnlineDepositPendingData(string bra_code) {
        object[] results = this.Invoke("getOnlineDepositPendingData", new object[] {
                    bra_code});
        return ((System.Data.DataTable)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetOnlineDepositPendingData(string bra_code, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getOnlineDepositPendingData", new object[] {
                    bra_code}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataTable EndgetOnlineDepositPendingData(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataTable)(results[0]));
    }
    
    /// <remarks/>
    public void getOnlineDepositPendingDataAsync(string bra_code) {
        this.getOnlineDepositPendingDataAsync(bra_code, null);
    }
    
    /// <remarks/>
    public void getOnlineDepositPendingDataAsync(string bra_code, object userState) {
        if ((this.getOnlineDepositPendingDataOperationCompleted == null)) {
            this.getOnlineDepositPendingDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOnlineDepositPendingDataOperationCompleted);
        }
        this.InvokeAsync("getOnlineDepositPendingData", new object[] {
                    bra_code}, this.getOnlineDepositPendingDataOperationCompleted, userState);
    }
    
    private void OngetOnlineDepositPendingDataOperationCompleted(object arg) {
        if ((this.getOnlineDepositPendingDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getOnlineDepositPendingDataCompleted(this, new getOnlineDepositPendingDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getOnlineWithdrawalPendingData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataTable getOnlineWithdrawalPendingData(string bra_code) {
        object[] results = this.Invoke("getOnlineWithdrawalPendingData", new object[] {
                    bra_code});
        return ((System.Data.DataTable)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetOnlineWithdrawalPendingData(string bra_code, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getOnlineWithdrawalPendingData", new object[] {
                    bra_code}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataTable EndgetOnlineWithdrawalPendingData(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataTable)(results[0]));
    }
    
    /// <remarks/>
    public void getOnlineWithdrawalPendingDataAsync(string bra_code) {
        this.getOnlineWithdrawalPendingDataAsync(bra_code, null);
    }
    
    /// <remarks/>
    public void getOnlineWithdrawalPendingDataAsync(string bra_code, object userState) {
        if ((this.getOnlineWithdrawalPendingDataOperationCompleted == null)) {
            this.getOnlineWithdrawalPendingDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOnlineWithdrawalPendingDataOperationCompleted);
        }
        this.InvokeAsync("getOnlineWithdrawalPendingData", new object[] {
                    bra_code}, this.getOnlineWithdrawalPendingDataOperationCompleted, userState);
    }
    
    private void OngetOnlineWithdrawalPendingDataOperationCompleted(object arg) {
        if ((this.getOnlineWithdrawalPendingDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getOnlineWithdrawalPendingDataCompleted(this, new getOnlineWithdrawalPendingDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getOnlinePendingPrintingData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataTable getOnlinePendingPrintingData(string teller_id) {
        object[] results = this.Invoke("getOnlinePendingPrintingData", new object[] {
                    teller_id});
        return ((System.Data.DataTable)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetOnlinePendingPrintingData(string teller_id, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getOnlinePendingPrintingData", new object[] {
                    teller_id}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataTable EndgetOnlinePendingPrintingData(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataTable)(results[0]));
    }
    
    /// <remarks/>
    public void getOnlinePendingPrintingDataAsync(string teller_id) {
        this.getOnlinePendingPrintingDataAsync(teller_id, null);
    }
    
    /// <remarks/>
    public void getOnlinePendingPrintingDataAsync(string teller_id, object userState) {
        if ((this.getOnlinePendingPrintingDataOperationCompleted == null)) {
            this.getOnlinePendingPrintingDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOnlinePendingPrintingDataOperationCompleted);
        }
        this.InvokeAsync("getOnlinePendingPrintingData", new object[] {
                    teller_id}, this.getOnlinePendingPrintingDataOperationCompleted, userState);
    }
    
    private void OngetOnlinePendingPrintingDataOperationCompleted(object arg) {
        if ((this.getOnlinePendingPrintingDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getOnlinePendingPrintingDataCompleted(this, new getOnlinePendingPrintingDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getReceiptResetPendingData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataTable getReceiptResetPendingData(string startdate, string acctno, string traamt) {
        object[] results = this.Invoke("getReceiptResetPendingData", new object[] {
                    startdate,
                    acctno,
                    traamt});
        return ((System.Data.DataTable)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetReceiptResetPendingData(string startdate, string acctno, string traamt, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getReceiptResetPendingData", new object[] {
                    startdate,
                    acctno,
                    traamt}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataTable EndgetReceiptResetPendingData(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataTable)(results[0]));
    }
    
    /// <remarks/>
    public void getReceiptResetPendingDataAsync(string startdate, string acctno, string traamt) {
        this.getReceiptResetPendingDataAsync(startdate, acctno, traamt, null);
    }
    
    /// <remarks/>
    public void getReceiptResetPendingDataAsync(string startdate, string acctno, string traamt, object userState) {
        if ((this.getReceiptResetPendingDataOperationCompleted == null)) {
            this.getReceiptResetPendingDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetReceiptResetPendingDataOperationCompleted);
        }
        this.InvokeAsync("getReceiptResetPendingData", new object[] {
                    startdate,
                    acctno,
                    traamt}, this.getReceiptResetPendingDataOperationCompleted, userState);
    }
    
    private void OngetReceiptResetPendingDataOperationCompleted(object arg) {
        if ((this.getReceiptResetPendingDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getReceiptResetPendingDataCompleted(this, new getReceiptResetPendingDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPinPadTransactionHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataTable getPinPadTransactionHistory(string startdate, string enddate, string transtype, string bracode, string tellerid) {
        object[] results = this.Invoke("getPinPadTransactionHistory", new object[] {
                    startdate,
                    enddate,
                    transtype,
                    bracode,
                    tellerid});
        return ((System.Data.DataTable)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetPinPadTransactionHistory(string startdate, string enddate, string transtype, string bracode, string tellerid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getPinPadTransactionHistory", new object[] {
                    startdate,
                    enddate,
                    transtype,
                    bracode,
                    tellerid}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataTable EndgetPinPadTransactionHistory(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataTable)(results[0]));
    }
    
    /// <remarks/>
    public void getPinPadTransactionHistoryAsync(string startdate, string enddate, string transtype, string bracode, string tellerid) {
        this.getPinPadTransactionHistoryAsync(startdate, enddate, transtype, bracode, tellerid, null);
    }
    
    /// <remarks/>
    public void getPinPadTransactionHistoryAsync(string startdate, string enddate, string transtype, string bracode, string tellerid, object userState) {
        if ((this.getPinPadTransactionHistoryOperationCompleted == null)) {
            this.getPinPadTransactionHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPinPadTransactionHistoryOperationCompleted);
        }
        this.InvokeAsync("getPinPadTransactionHistory", new object[] {
                    startdate,
                    enddate,
                    transtype,
                    bracode,
                    tellerid}, this.getPinPadTransactionHistoryOperationCompleted, userState);
    }
    
    private void OngetPinPadTransactionHistoryOperationCompleted(object arg) {
        if ((this.getPinPadTransactionHistoryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getPinPadTransactionHistoryCompleted(this, new getPinPadTransactionHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateTransactionForReceiptReprint", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public ulong UpdateTransactionForReceiptReprint(ulong transId) {
        object[] results = this.Invoke("UpdateTransactionForReceiptReprint", new object[] {
                    transId});
        return ((ulong)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateTransactionForReceiptReprint(ulong transId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateTransactionForReceiptReprint", new object[] {
                    transId}, callback, asyncState);
    }
    
    /// <remarks/>
    public ulong EndUpdateTransactionForReceiptReprint(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ulong)(results[0]));
    }
    
    /// <remarks/>
    public void UpdateTransactionForReceiptReprintAsync(ulong transId) {
        this.UpdateTransactionForReceiptReprintAsync(transId, null);
    }
    
    /// <remarks/>
    public void UpdateTransactionForReceiptReprintAsync(ulong transId, object userState) {
        if ((this.UpdateTransactionForReceiptReprintOperationCompleted == null)) {
            this.UpdateTransactionForReceiptReprintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTransactionForReceiptReprintOperationCompleted);
        }
        this.InvokeAsync("UpdateTransactionForReceiptReprint", new object[] {
                    transId}, this.UpdateTransactionForReceiptReprintOperationCompleted, userState);
    }
    
    private void OnUpdateTransactionForReceiptReprintOperationCompleted(object arg) {
        if ((this.UpdateTransactionForReceiptReprintCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateTransactionForReceiptReprintCompleted(this, new UpdateTransactionForReceiptReprintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePrintStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public bool UpdatePrintStatus(ulong transsequence, int printstatus) {
        object[] results = this.Invoke("UpdatePrintStatus", new object[] {
                    transsequence,
                    printstatus});
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdatePrintStatus(ulong transsequence, int printstatus, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdatePrintStatus", new object[] {
                    transsequence,
                    printstatus}, callback, asyncState);
    }
    
    /// <remarks/>
    public bool EndUpdatePrintStatus(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public void UpdatePrintStatusAsync(ulong transsequence, int printstatus) {
        this.UpdatePrintStatusAsync(transsequence, printstatus, null);
    }
    
    /// <remarks/>
    public void UpdatePrintStatusAsync(ulong transsequence, int printstatus, object userState) {
        if ((this.UpdatePrintStatusOperationCompleted == null)) {
            this.UpdatePrintStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePrintStatusOperationCompleted);
        }
        this.InvokeAsync("UpdatePrintStatus", new object[] {
                    transsequence,
                    printstatus}, this.UpdatePrintStatusOperationCompleted, userState);
    }
    
    private void OnUpdatePrintStatusOperationCompleted(object arg) {
        if ((this.UpdatePrintStatusCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdatePrintStatusCompleted(this, new UpdatePrintStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertIntoCentralDB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public bool InsertIntoCentralDB(
                int TransactionID, 
                string CustomerNo, 
                string Transtype, 
                string OriginatingTellerId, 
                string AuthenticationMode, 
                double TransAmount, 
                string ApprovingTellerID, 
                string OriginatingBraCode, 
                string TransactionStatus, 
                string BasisTransSequence, 
                string CustomerName, 
                System.DateTime TransDate, 
                string TellerTillAccount, 
                string FailReason, 
                bool PrintStatus, 
                string DepositorName) {
        object[] results = this.Invoke("InsertIntoCentralDB", new object[] {
                    TransactionID,
                    CustomerNo,
                    Transtype,
                    OriginatingTellerId,
                    AuthenticationMode,
                    TransAmount,
                    ApprovingTellerID,
                    OriginatingBraCode,
                    TransactionStatus,
                    BasisTransSequence,
                    CustomerName,
                    TransDate,
                    TellerTillAccount,
                    FailReason,
                    PrintStatus,
                    DepositorName});
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginInsertIntoCentralDB(
                int TransactionID, 
                string CustomerNo, 
                string Transtype, 
                string OriginatingTellerId, 
                string AuthenticationMode, 
                double TransAmount, 
                string ApprovingTellerID, 
                string OriginatingBraCode, 
                string TransactionStatus, 
                string BasisTransSequence, 
                string CustomerName, 
                System.DateTime TransDate, 
                string TellerTillAccount, 
                string FailReason, 
                bool PrintStatus, 
                string DepositorName, 
                System.AsyncCallback callback, 
                object asyncState) {
        return this.BeginInvoke("InsertIntoCentralDB", new object[] {
                    TransactionID,
                    CustomerNo,
                    Transtype,
                    OriginatingTellerId,
                    AuthenticationMode,
                    TransAmount,
                    ApprovingTellerID,
                    OriginatingBraCode,
                    TransactionStatus,
                    BasisTransSequence,
                    CustomerName,
                    TransDate,
                    TellerTillAccount,
                    FailReason,
                    PrintStatus,
                    DepositorName}, callback, asyncState);
    }
    
    /// <remarks/>
    public bool EndInsertIntoCentralDB(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public void InsertIntoCentralDBAsync(
                int TransactionID, 
                string CustomerNo, 
                string Transtype, 
                string OriginatingTellerId, 
                string AuthenticationMode, 
                double TransAmount, 
                string ApprovingTellerID, 
                string OriginatingBraCode, 
                string TransactionStatus, 
                string BasisTransSequence, 
                string CustomerName, 
                System.DateTime TransDate, 
                string TellerTillAccount, 
                string FailReason, 
                bool PrintStatus, 
                string DepositorName) {
        this.InsertIntoCentralDBAsync(TransactionID, CustomerNo, Transtype, OriginatingTellerId, AuthenticationMode, TransAmount, ApprovingTellerID, OriginatingBraCode, TransactionStatus, BasisTransSequence, CustomerName, TransDate, TellerTillAccount, FailReason, PrintStatus, DepositorName, null);
    }
    
    /// <remarks/>
    public void InsertIntoCentralDBAsync(
                int TransactionID, 
                string CustomerNo, 
                string Transtype, 
                string OriginatingTellerId, 
                string AuthenticationMode, 
                double TransAmount, 
                string ApprovingTellerID, 
                string OriginatingBraCode, 
                string TransactionStatus, 
                string BasisTransSequence, 
                string CustomerName, 
                System.DateTime TransDate, 
                string TellerTillAccount, 
                string FailReason, 
                bool PrintStatus, 
                string DepositorName, 
                object userState) {
        if ((this.InsertIntoCentralDBOperationCompleted == null)) {
            this.InsertIntoCentralDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertIntoCentralDBOperationCompleted);
        }
        this.InvokeAsync("InsertIntoCentralDB", new object[] {
                    TransactionID,
                    CustomerNo,
                    Transtype,
                    OriginatingTellerId,
                    AuthenticationMode,
                    TransAmount,
                    ApprovingTellerID,
                    OriginatingBraCode,
                    TransactionStatus,
                    BasisTransSequence,
                    CustomerName,
                    TransDate,
                    TellerTillAccount,
                    FailReason,
                    PrintStatus,
                    DepositorName}, this.InsertIntoCentralDBOperationCompleted, userState);
    }
    
    private void OnInsertIntoCentralDBOperationCompleted(object arg) {
        if ((this.InsertIntoCentralDBCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertIntoCentralDBCompleted(this, new InsertIntoCentralDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsInProgress", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public bool IsInProgress(ulong transid) {
        object[] results = this.Invoke("IsInProgress", new object[] {
                    transid});
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginIsInProgress(ulong transid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("IsInProgress", new object[] {
                    transid}, callback, asyncState);
    }
    
    /// <remarks/>
    public bool EndIsInProgress(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public void IsInProgressAsync(ulong transid) {
        this.IsInProgressAsync(transid, null);
    }
    
    /// <remarks/>
    public void IsInProgressAsync(ulong transid, object userState) {
        if ((this.IsInProgressOperationCompleted == null)) {
            this.IsInProgressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsInProgressOperationCompleted);
        }
        this.InvokeAsync("IsInProgress", new object[] {
                    transid}, this.IsInProgressOperationCompleted, userState);
    }
    
    private void OnIsInProgressOperationCompleted(object arg) {
        if ((this.IsInProgressCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.IsInProgressCompleted(this, new IsInProgressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getOIOpportunities", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataTable getOIOpportunities(string bra_code, string cus_num) {
        object[] results = this.Invoke("getOIOpportunities", new object[] {
                    bra_code,
                    cus_num});
        return ((System.Data.DataTable)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetOIOpportunities(string bra_code, string cus_num, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getOIOpportunities", new object[] {
                    bra_code,
                    cus_num}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataTable EndgetOIOpportunities(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataTable)(results[0]));
    }
    
    /// <remarks/>
    public void getOIOpportunitiesAsync(string bra_code, string cus_num) {
        this.getOIOpportunitiesAsync(bra_code, cus_num, null);
    }
    
    /// <remarks/>
    public void getOIOpportunitiesAsync(string bra_code, string cus_num, object userState) {
        if ((this.getOIOpportunitiesOperationCompleted == null)) {
            this.getOIOpportunitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOIOpportunitiesOperationCompleted);
        }
        this.InvokeAsync("getOIOpportunities", new object[] {
                    bra_code,
                    cus_num}, this.getOIOpportunitiesOperationCompleted, userState);
    }
    
    private void OngetOIOpportunitiesOperationCompleted(object arg) {
        if ((this.getOIOpportunitiesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getOIOpportunitiesCompleted(this, new getOIOpportunitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateOIOpportunities", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string UpdateOIOpportunities(string bra_code, string cus_num, string feedback, string tellerid) {
        object[] results = this.Invoke("UpdateOIOpportunities", new object[] {
                    bra_code,
                    cus_num,
                    feedback,
                    tellerid});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateOIOpportunities(string bra_code, string cus_num, string feedback, string tellerid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateOIOpportunities", new object[] {
                    bra_code,
                    cus_num,
                    feedback,
                    tellerid}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndUpdateOIOpportunities(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void UpdateOIOpportunitiesAsync(string bra_code, string cus_num, string feedback, string tellerid) {
        this.UpdateOIOpportunitiesAsync(bra_code, cus_num, feedback, tellerid, null);
    }
    
    /// <remarks/>
    public void UpdateOIOpportunitiesAsync(string bra_code, string cus_num, string feedback, string tellerid, object userState) {
        if ((this.UpdateOIOpportunitiesOperationCompleted == null)) {
            this.UpdateOIOpportunitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOIOpportunitiesOperationCompleted);
        }
        this.InvokeAsync("UpdateOIOpportunities", new object[] {
                    bra_code,
                    cus_num,
                    feedback,
                    tellerid}, this.UpdateOIOpportunitiesOperationCompleted, userState);
    }
    
    private void OnUpdateOIOpportunitiesOperationCompleted(object arg) {
        if ((this.UpdateOIOpportunitiesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateOIOpportunitiesCompleted(this, new UpdateOIOpportunitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateOISelectionbyTeller", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string UpdateOISelectionbyTeller(string bra_code, string cus_num, string tellerid) {
        object[] results = this.Invoke("UpdateOISelectionbyTeller", new object[] {
                    bra_code,
                    cus_num,
                    tellerid});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateOISelectionbyTeller(string bra_code, string cus_num, string tellerid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateOISelectionbyTeller", new object[] {
                    bra_code,
                    cus_num,
                    tellerid}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndUpdateOISelectionbyTeller(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void UpdateOISelectionbyTellerAsync(string bra_code, string cus_num, string tellerid) {
        this.UpdateOISelectionbyTellerAsync(bra_code, cus_num, tellerid, null);
    }
    
    /// <remarks/>
    public void UpdateOISelectionbyTellerAsync(string bra_code, string cus_num, string tellerid, object userState) {
        if ((this.UpdateOISelectionbyTellerOperationCompleted == null)) {
            this.UpdateOISelectionbyTellerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOISelectionbyTellerOperationCompleted);
        }
        this.InvokeAsync("UpdateOISelectionbyTeller", new object[] {
                    bra_code,
                    cus_num,
                    tellerid}, this.UpdateOISelectionbyTellerOperationCompleted, userState);
    }
    
    private void OnUpdateOISelectionbyTellerOperationCompleted(object arg) {
        if ((this.UpdateOISelectionbyTellerCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateOISelectionbyTellerCompleted(this, new UpdateOISelectionbyTellerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FastTrackGetPending", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataTable FastTrackGetPending(string phoneNumber, string transType) {
        object[] results = this.Invoke("FastTrackGetPending", new object[] {
                    phoneNumber,
                    transType});
        return ((System.Data.DataTable)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginFastTrackGetPending(string phoneNumber, string transType, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("FastTrackGetPending", new object[] {
                    phoneNumber,
                    transType}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataTable EndFastTrackGetPending(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataTable)(results[0]));
    }
    
    /// <remarks/>
    public void FastTrackGetPendingAsync(string phoneNumber, string transType) {
        this.FastTrackGetPendingAsync(phoneNumber, transType, null);
    }
    
    /// <remarks/>
    public void FastTrackGetPendingAsync(string phoneNumber, string transType, object userState) {
        if ((this.FastTrackGetPendingOperationCompleted == null)) {
            this.FastTrackGetPendingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFastTrackGetPendingOperationCompleted);
        }
        this.InvokeAsync("FastTrackGetPending", new object[] {
                    phoneNumber,
                    transType}, this.FastTrackGetPendingOperationCompleted, userState);
    }
    
    private void OnFastTrackGetPendingOperationCompleted(object arg) {
        if ((this.FastTrackGetPendingCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.FastTrackGetPendingCompleted(this, new FastTrackGetPendingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FastTrackUpdateTeller", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int FastTrackUpdateTeller(string id, string status, string PostTeller, long transid) {
        object[] results = this.Invoke("FastTrackUpdateTeller", new object[] {
                    id,
                    status,
                    PostTeller,
                    transid});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginFastTrackUpdateTeller(string id, string status, string PostTeller, long transid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("FastTrackUpdateTeller", new object[] {
                    id,
                    status,
                    PostTeller,
                    transid}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndFastTrackUpdateTeller(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void FastTrackUpdateTellerAsync(string id, string status, string PostTeller, long transid) {
        this.FastTrackUpdateTellerAsync(id, status, PostTeller, transid, null);
    }
    
    /// <remarks/>
    public void FastTrackUpdateTellerAsync(string id, string status, string PostTeller, long transid, object userState) {
        if ((this.FastTrackUpdateTellerOperationCompleted == null)) {
            this.FastTrackUpdateTellerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFastTrackUpdateTellerOperationCompleted);
        }
        this.InvokeAsync("FastTrackUpdateTeller", new object[] {
                    id,
                    status,
                    PostTeller,
                    transid}, this.FastTrackUpdateTellerOperationCompleted, userState);
    }
    
    private void OnFastTrackUpdateTellerOperationCompleted(object arg) {
        if ((this.FastTrackUpdateTellerCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.FastTrackUpdateTellerCompleted(this, new FastTrackUpdateTellerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FastTrackUpdateSupervisor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int FastTrackUpdateSupervisor(string id, string status, string PostSupervisor) {
        object[] results = this.Invoke("FastTrackUpdateSupervisor", new object[] {
                    id,
                    status,
                    PostSupervisor});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginFastTrackUpdateSupervisor(string id, string status, string PostSupervisor, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("FastTrackUpdateSupervisor", new object[] {
                    id,
                    status,
                    PostSupervisor}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndFastTrackUpdateSupervisor(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void FastTrackUpdateSupervisorAsync(string id, string status, string PostSupervisor) {
        this.FastTrackUpdateSupervisorAsync(id, status, PostSupervisor, null);
    }
    
    /// <remarks/>
    public void FastTrackUpdateSupervisorAsync(string id, string status, string PostSupervisor, object userState) {
        if ((this.FastTrackUpdateSupervisorOperationCompleted == null)) {
            this.FastTrackUpdateSupervisorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFastTrackUpdateSupervisorOperationCompleted);
        }
        this.InvokeAsync("FastTrackUpdateSupervisor", new object[] {
                    id,
                    status,
                    PostSupervisor}, this.FastTrackUpdateSupervisorOperationCompleted, userState);
    }
    
    private void OnFastTrackUpdateSupervisorOperationCompleted(object arg) {
        if ((this.FastTrackUpdateSupervisorCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.FastTrackUpdateSupervisorCompleted(this, new FastTrackUpdateSupervisorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNubanAccountWithFunds", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetNubanAccountWithFunds(string XmlRequest) {
        object[] results = this.Invoke("GetNubanAccountWithFunds", new object[] {
                    XmlRequest});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetNubanAccountWithFunds(string XmlRequest, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetNubanAccountWithFunds", new object[] {
                    XmlRequest}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetNubanAccountWithFunds(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetNubanAccountWithFundsAsync(string XmlRequest) {
        this.GetNubanAccountWithFundsAsync(XmlRequest, null);
    }
    
    /// <remarks/>
    public void GetNubanAccountWithFundsAsync(string XmlRequest, object userState) {
        if ((this.GetNubanAccountWithFundsOperationCompleted == null)) {
            this.GetNubanAccountWithFundsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNubanAccountWithFundsOperationCompleted);
        }
        this.InvokeAsync("GetNubanAccountWithFunds", new object[] {
                    XmlRequest}, this.GetNubanAccountWithFundsOperationCompleted, userState);
    }
    
    private void OnGetNubanAccountWithFundsOperationCompleted(object arg) {
        if ((this.GetNubanAccountWithFundsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetNubanAccountWithFundsCompleted(this, new GetNubanAccountWithFundsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVerificationResponse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public FingerPrintVerificationResponse GetVerificationResponse(FingerPrintVerificationRequest request) {
        object[] results = this.Invoke("GetVerificationResponse", new object[] {
                    request});
        return ((FingerPrintVerificationResponse)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetVerificationResponse(FingerPrintVerificationRequest request, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetVerificationResponse", new object[] {
                    request}, callback, asyncState);
    }
    
    /// <remarks/>
    public FingerPrintVerificationResponse EndGetVerificationResponse(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((FingerPrintVerificationResponse)(results[0]));
    }
    
    /// <remarks/>
    public void GetVerificationResponseAsync(FingerPrintVerificationRequest request) {
        this.GetVerificationResponseAsync(request, null);
    }
    
    /// <remarks/>
    public void GetVerificationResponseAsync(FingerPrintVerificationRequest request, object userState) {
        if ((this.GetVerificationResponseOperationCompleted == null)) {
            this.GetVerificationResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVerificationResponseOperationCompleted);
        }
        this.InvokeAsync("GetVerificationResponse", new object[] {
                    request}, this.GetVerificationResponseOperationCompleted, userState);
    }
    
    private void OnGetVerificationResponseOperationCompleted(object arg) {
        if ((this.GetVerificationResponseCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetVerificationResponseCompleted(this, new GetVerificationResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkrestriction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string checkrestriction(string accountno) {
        object[] results = this.Invoke("checkrestriction", new object[] {
                    accountno});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult Begincheckrestriction(string accountno, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("checkrestriction", new object[] {
                    accountno}, callback, asyncState);
    }
    
    /// <remarks/>
    public string Endcheckrestriction(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void checkrestrictionAsync(string accountno) {
        this.checkrestrictionAsync(accountno, null);
    }
    
    /// <remarks/>
    public void checkrestrictionAsync(string accountno, object userState) {
        if ((this.checkrestrictionOperationCompleted == null)) {
            this.checkrestrictionOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckrestrictionOperationCompleted);
        }
        this.InvokeAsync("checkrestriction", new object[] {
                    accountno}, this.checkrestrictionOperationCompleted, userState);
    }
    
    private void OncheckrestrictionOperationCompleted(object arg) {
        if ((this.checkrestrictionCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.checkrestrictionCompleted(this, new checkrestrictionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkrestrictionBraCus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string checkrestrictionBraCus(string branchCode, string customerNo) {
        object[] results = this.Invoke("checkrestrictionBraCus", new object[] {
                    branchCode,
                    customerNo});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegincheckrestrictionBraCus(string branchCode, string customerNo, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("checkrestrictionBraCus", new object[] {
                    branchCode,
                    customerNo}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndcheckrestrictionBraCus(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void checkrestrictionBraCusAsync(string branchCode, string customerNo) {
        this.checkrestrictionBraCusAsync(branchCode, customerNo, null);
    }
    
    /// <remarks/>
    public void checkrestrictionBraCusAsync(string branchCode, string customerNo, object userState) {
        if ((this.checkrestrictionBraCusOperationCompleted == null)) {
            this.checkrestrictionBraCusOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckrestrictionBraCusOperationCompleted);
        }
        this.InvokeAsync("checkrestrictionBraCus", new object[] {
                    branchCode,
                    customerNo}, this.checkrestrictionBraCusOperationCompleted, userState);
    }
    
    private void OncheckrestrictionBraCusOperationCompleted(object arg) {
        if ((this.checkrestrictionBraCusCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.checkrestrictionBraCusCompleted(this, new checkrestrictionBraCusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountdetailsfromPhone", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataTable GetAccountdetailsfromPhone(string phoneNumber) {
        object[] results = this.Invoke("GetAccountdetailsfromPhone", new object[] {
                    phoneNumber});
        return ((System.Data.DataTable)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetAccountdetailsfromPhone(string phoneNumber, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetAccountdetailsfromPhone", new object[] {
                    phoneNumber}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataTable EndGetAccountdetailsfromPhone(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataTable)(results[0]));
    }
    
    /// <remarks/>
    public void GetAccountdetailsfromPhoneAsync(string phoneNumber) {
        this.GetAccountdetailsfromPhoneAsync(phoneNumber, null);
    }
    
    /// <remarks/>
    public void GetAccountdetailsfromPhoneAsync(string phoneNumber, object userState) {
        if ((this.GetAccountdetailsfromPhoneOperationCompleted == null)) {
            this.GetAccountdetailsfromPhoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountdetailsfromPhoneOperationCompleted);
        }
        this.InvokeAsync("GetAccountdetailsfromPhone", new object[] {
                    phoneNumber}, this.GetAccountdetailsfromPhoneOperationCompleted, userState);
    }
    
    private void OnGetAccountdetailsfromPhoneOperationCompleted(object arg) {
        if ((this.GetAccountdetailsfromPhoneCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetAccountdetailsfromPhoneCompleted(this, new GetAccountdetailsfromPhoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Encrypt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string Encrypt(string EncryptString) {
        object[] results = this.Invoke("Encrypt", new object[] {
                    EncryptString});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginEncrypt(string EncryptString, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Encrypt", new object[] {
                    EncryptString}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndEncrypt(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void EncryptAsync(string EncryptString) {
        this.EncryptAsync(EncryptString, null);
    }
    
    /// <remarks/>
    public void EncryptAsync(string EncryptString, object userState) {
        if ((this.EncryptOperationCompleted == null)) {
            this.EncryptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEncryptOperationCompleted);
        }
        this.InvokeAsync("Encrypt", new object[] {
                    EncryptString}, this.EncryptOperationCompleted, userState);
    }
    
    private void OnEncryptOperationCompleted(object arg) {
        if ((this.EncryptCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.EncryptCompleted(this, new EncryptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateEncryptedAdminUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string ValidateEncryptedAdminUser(string userid, string password, string code, int appid) {
        object[] results = this.Invoke("ValidateEncryptedAdminUser", new object[] {
                    userid,
                    password,
                    code,
                    appid});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginValidateEncryptedAdminUser(string userid, string password, string code, int appid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ValidateEncryptedAdminUser", new object[] {
                    userid,
                    password,
                    code,
                    appid}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndValidateEncryptedAdminUser(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void ValidateEncryptedAdminUserAsync(string userid, string password, string code, int appid) {
        this.ValidateEncryptedAdminUserAsync(userid, password, code, appid, null);
    }
    
    /// <remarks/>
    public void ValidateEncryptedAdminUserAsync(string userid, string password, string code, int appid, object userState) {
        if ((this.ValidateEncryptedAdminUserOperationCompleted == null)) {
            this.ValidateEncryptedAdminUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateEncryptedAdminUserOperationCompleted);
        }
        this.InvokeAsync("ValidateEncryptedAdminUser", new object[] {
                    userid,
                    password,
                    code,
                    appid}, this.ValidateEncryptedAdminUserOperationCompleted, userState);
    }
    
    private void OnValidateEncryptedAdminUserOperationCompleted(object arg) {
        if ((this.ValidateEncryptedAdminUserCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ValidateEncryptedAdminUserCompleted(this, new ValidateEncryptedAdminUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateAdminUserOffSite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string ValidateAdminUserOffSite(string userid, string password, int appid) {
        object[] results = this.Invoke("ValidateAdminUserOffSite", new object[] {
                    userid,
                    password,
                    appid});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginValidateAdminUserOffSite(string userid, string password, int appid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ValidateAdminUserOffSite", new object[] {
                    userid,
                    password,
                    appid}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndValidateAdminUserOffSite(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void ValidateAdminUserOffSiteAsync(string userid, string password, int appid) {
        this.ValidateAdminUserOffSiteAsync(userid, password, appid, null);
    }
    
    /// <remarks/>
    public void ValidateAdminUserOffSiteAsync(string userid, string password, int appid, object userState) {
        if ((this.ValidateAdminUserOffSiteOperationCompleted == null)) {
            this.ValidateAdminUserOffSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateAdminUserOffSiteOperationCompleted);
        }
        this.InvokeAsync("ValidateAdminUserOffSite", new object[] {
                    userid,
                    password,
                    appid}, this.ValidateAdminUserOffSiteOperationCompleted, userState);
    }
    
    private void OnValidateAdminUserOffSiteOperationCompleted(object arg) {
        if ((this.ValidateAdminUserOffSiteCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ValidateAdminUserOffSiteCompleted(this, new ValidateAdminUserOffSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateAdminUserOffSitewithAppver", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string ValidateAdminUserOffSitewithAppver(string userid, string newpassword, int appid, string appversion, string tokenvalue) {
        object[] results = this.Invoke("ValidateAdminUserOffSitewithAppver", new object[] {
                    userid,
                    newpassword,
                    appid,
                    appversion,
                    tokenvalue});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginValidateAdminUserOffSitewithAppver(string userid, string newpassword, int appid, string appversion, string tokenvalue, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ValidateAdminUserOffSitewithAppver", new object[] {
                    userid,
                    newpassword,
                    appid,
                    appversion,
                    tokenvalue}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndValidateAdminUserOffSitewithAppver(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void ValidateAdminUserOffSitewithAppverAsync(string userid, string newpassword, int appid, string appversion, string tokenvalue) {
        this.ValidateAdminUserOffSitewithAppverAsync(userid, newpassword, appid, appversion, tokenvalue, null);
    }
    
    /// <remarks/>
    public void ValidateAdminUserOffSitewithAppverAsync(string userid, string newpassword, int appid, string appversion, string tokenvalue, object userState) {
        if ((this.ValidateAdminUserOffSitewithAppverOperationCompleted == null)) {
            this.ValidateAdminUserOffSitewithAppverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateAdminUserOffSitewithAppverOperationCompleted);
        }
        this.InvokeAsync("ValidateAdminUserOffSitewithAppver", new object[] {
                    userid,
                    newpassword,
                    appid,
                    appversion,
                    tokenvalue}, this.ValidateAdminUserOffSitewithAppverOperationCompleted, userState);
    }
    
    private void OnValidateAdminUserOffSitewithAppverOperationCompleted(object arg) {
        if ((this.ValidateAdminUserOffSitewithAppverCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ValidateAdminUserOffSitewithAppverCompleted(this, new ValidateAdminUserOffSitewithAppverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string ValidateUser(string userid, string password) {
        object[] results = this.Invoke("ValidateUser", new object[] {
                    userid,
                    password});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginValidateUser(string userid, string password, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ValidateUser", new object[] {
                    userid,
                    password}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndValidateUser(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void ValidateUserAsync(string userid, string password) {
        this.ValidateUserAsync(userid, password, null);
    }
    
    /// <remarks/>
    public void ValidateUserAsync(string userid, string password, object userState) {
        if ((this.ValidateUserOperationCompleted == null)) {
            this.ValidateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateUserOperationCompleted);
        }
        this.InvokeAsync("ValidateUser", new object[] {
                    userid,
                    password}, this.ValidateUserOperationCompleted, userState);
    }
    
    private void OnValidateUserOperationCompleted(object arg) {
        if ((this.ValidateUserCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ValidateUserCompleted(this, new ValidateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomerName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetCustomerName(string bracode, string cusnum) {
        object[] results = this.Invoke("GetCustomerName", new object[] {
                    bracode,
                    cusnum});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetCustomerName(string bracode, string cusnum, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetCustomerName", new object[] {
                    bracode,
                    cusnum}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetCustomerName(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetCustomerNameAsync(string bracode, string cusnum) {
        this.GetCustomerNameAsync(bracode, cusnum, null);
    }
    
    /// <remarks/>
    public void GetCustomerNameAsync(string bracode, string cusnum, object userState) {
        if ((this.GetCustomerNameOperationCompleted == null)) {
            this.GetCustomerNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerNameOperationCompleted);
        }
        this.InvokeAsync("GetCustomerName", new object[] {
                    bracode,
                    cusnum}, this.GetCustomerNameOperationCompleted, userState);
    }
    
    private void OnGetCustomerNameOperationCompleted(object arg) {
        if ((this.GetCustomerNameCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetCustomerNameCompleted(this, new GetCustomerNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Transfer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string Transfer(string parameter) {
        object[] results = this.Invoke("Transfer", new object[] {
                    parameter});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginTransfer(string parameter, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Transfer", new object[] {
                    parameter}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndTransfer(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void TransferAsync(string parameter) {
        this.TransferAsync(parameter, null);
    }
    
    /// <remarks/>
    public void TransferAsync(string parameter, object userState) {
        if ((this.TransferOperationCompleted == null)) {
            this.TransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferOperationCompleted);
        }
        this.InvokeAsync("Transfer", new object[] {
                    parameter}, this.TransferOperationCompleted, userState);
    }
    
    private void OnTransferOperationCompleted(object arg) {
        if ((this.TransferCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TransferCompleted(this, new TransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferChargesandVAT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string TransferChargesandVAT(string parameter) {
        object[] results = this.Invoke("TransferChargesandVAT", new object[] {
                    parameter});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginTransferChargesandVAT(string parameter, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("TransferChargesandVAT", new object[] {
                    parameter}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndTransferChargesandVAT(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void TransferChargesandVATAsync(string parameter) {
        this.TransferChargesandVATAsync(parameter, null);
    }
    
    /// <remarks/>
    public void TransferChargesandVATAsync(string parameter, object userState) {
        if ((this.TransferChargesandVATOperationCompleted == null)) {
            this.TransferChargesandVATOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferChargesandVATOperationCompleted);
        }
        this.InvokeAsync("TransferChargesandVAT", new object[] {
                    parameter}, this.TransferChargesandVATOperationCompleted, userState);
    }
    
    private void OnTransferChargesandVATOperationCompleted(object arg) {
        if ((this.TransferChargesandVATCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TransferChargesandVATCompleted(this, new TransferChargesandVATCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferCharges", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string TransferCharges(string parameter) {
        object[] results = this.Invoke("TransferCharges", new object[] {
                    parameter});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginTransferCharges(string parameter, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("TransferCharges", new object[] {
                    parameter}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndTransferCharges(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void TransferChargesAsync(string parameter) {
        this.TransferChargesAsync(parameter, null);
    }
    
    /// <remarks/>
    public void TransferChargesAsync(string parameter, object userState) {
        if ((this.TransferChargesOperationCompleted == null)) {
            this.TransferChargesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferChargesOperationCompleted);
        }
        this.InvokeAsync("TransferCharges", new object[] {
                    parameter}, this.TransferChargesOperationCompleted, userState);
    }
    
    private void OnTransferChargesOperationCompleted(object arg) {
        if ((this.TransferChargesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TransferChargesCompleted(this, new TransferChargesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string SendSMS(string userid, string phoneno) {
        object[] results = this.Invoke("SendSMS", new object[] {
                    userid,
                    phoneno});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSendSMS(string userid, string phoneno, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SendSMS", new object[] {
                    userid,
                    phoneno}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndSendSMS(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void SendSMSAsync(string userid, string phoneno) {
        this.SendSMSAsync(userid, phoneno, null);
    }
    
    /// <remarks/>
    public void SendSMSAsync(string userid, string phoneno, object userState) {
        if ((this.SendSMSOperationCompleted == null)) {
            this.SendSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMSOperationCompleted);
        }
        this.InvokeAsync("SendSMS", new object[] {
                    userid,
                    phoneno}, this.SendSMSOperationCompleted, userState);
    }
    
    private void OnSendSMSOperationCompleted(object arg) {
        if ((this.SendSMSCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SendSMSCompleted(this, new SendSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string SendEmail(string subject, string mailmessage, string emailfrom, string emailto, string attachment) {
        object[] results = this.Invoke("SendEmail", new object[] {
                    subject,
                    mailmessage,
                    emailfrom,
                    emailto,
                    attachment});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSendEmail(string subject, string mailmessage, string emailfrom, string emailto, string attachment, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SendEmail", new object[] {
                    subject,
                    mailmessage,
                    emailfrom,
                    emailto,
                    attachment}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndSendEmail(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void SendEmailAsync(string subject, string mailmessage, string emailfrom, string emailto, string attachment) {
        this.SendEmailAsync(subject, mailmessage, emailfrom, emailto, attachment, null);
    }
    
    /// <remarks/>
    public void SendEmailAsync(string subject, string mailmessage, string emailfrom, string emailto, string attachment, object userState) {
        if ((this.SendEmailOperationCompleted == null)) {
            this.SendEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmailOperationCompleted);
        }
        this.InvokeAsync("SendEmail", new object[] {
                    subject,
                    mailmessage,
                    emailfrom,
                    emailto,
                    attachment}, this.SendEmailOperationCompleted, userState);
    }
    
    private void OnSendEmailOperationCompleted(object arg) {
        if ((this.SendEmailCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SendEmailCompleted(this, new SendEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetApplicationRoleUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetApplicationRoleUsers(int roleid, int appid) {
        object[] results = this.Invoke("GetApplicationRoleUsers", new object[] {
                    roleid,
                    appid});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetApplicationRoleUsers(int roleid, int appid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetApplicationRoleUsers", new object[] {
                    roleid,
                    appid}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetApplicationRoleUsers(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetApplicationRoleUsersAsync(int roleid, int appid) {
        this.GetApplicationRoleUsersAsync(roleid, appid, null);
    }
    
    /// <remarks/>
    public void GetApplicationRoleUsersAsync(int roleid, int appid, object userState) {
        if ((this.GetApplicationRoleUsersOperationCompleted == null)) {
            this.GetApplicationRoleUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApplicationRoleUsersOperationCompleted);
        }
        this.InvokeAsync("GetApplicationRoleUsers", new object[] {
                    roleid,
                    appid}, this.GetApplicationRoleUsersOperationCompleted, userState);
    }
    
    private void OnGetApplicationRoleUsersOperationCompleted(object arg) {
        if ((this.GetApplicationRoleUsersCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetApplicationRoleUsersCompleted(this, new GetApplicationRoleUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomerDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetCustomerDetails(string userid) {
        object[] results = this.Invoke("GetCustomerDetails", new object[] {
                    userid});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetCustomerDetails(string userid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetCustomerDetails", new object[] {
                    userid}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetCustomerDetails(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetCustomerDetailsAsync(string userid) {
        this.GetCustomerDetailsAsync(userid, null);
    }
    
    /// <remarks/>
    public void GetCustomerDetailsAsync(string userid, object userState) {
        if ((this.GetCustomerDetailsOperationCompleted == null)) {
            this.GetCustomerDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerDetailsOperationCompleted);
        }
        this.InvokeAsync("GetCustomerDetails", new object[] {
                    userid}, this.GetCustomerDetailsOperationCompleted, userState);
    }
    
    private void OnGetCustomerDetailsOperationCompleted(object arg) {
        if ((this.GetCustomerDetailsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetCustomerDetailsCompleted(this, new GetCustomerDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string ValidateAccount(string userid, string acctno) {
        object[] results = this.Invoke("ValidateAccount", new object[] {
                    userid,
                    acctno});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginValidateAccount(string userid, string acctno, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ValidateAccount", new object[] {
                    userid,
                    acctno}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndValidateAccount(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void ValidateAccountAsync(string userid, string acctno) {
        this.ValidateAccountAsync(userid, acctno, null);
    }
    
    /// <remarks/>
    public void ValidateAccountAsync(string userid, string acctno, object userState) {
        if ((this.ValidateAccountOperationCompleted == null)) {
            this.ValidateAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateAccountOperationCompleted);
        }
        this.InvokeAsync("ValidateAccount", new object[] {
                    userid,
                    acctno}, this.ValidateAccountOperationCompleted, userState);
    }
    
    private void OnValidateAccountOperationCompleted(object arg) {
        if ((this.ValidateAccountCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ValidateAccountCompleted(this, new ValidateAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckUserFlag", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string CheckUserFlag(string uid) {
        object[] results = this.Invoke("CheckUserFlag", new object[] {
                    uid});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCheckUserFlag(string uid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CheckUserFlag", new object[] {
                    uid}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndCheckUserFlag(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void CheckUserFlagAsync(string uid) {
        this.CheckUserFlagAsync(uid, null);
    }
    
    /// <remarks/>
    public void CheckUserFlagAsync(string uid, object userState) {
        if ((this.CheckUserFlagOperationCompleted == null)) {
            this.CheckUserFlagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckUserFlagOperationCompleted);
        }
        this.InvokeAsync("CheckUserFlag", new object[] {
                    uid}, this.CheckUserFlagOperationCompleted, userState);
    }
    
    private void OnCheckUserFlagOperationCompleted(object arg) {
        if ((this.CheckUserFlagCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CheckUserFlagCompleted(this, new CheckUserFlagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ResetUserFlag", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string ResetUserFlag(string uid) {
        object[] results = this.Invoke("ResetUserFlag", new object[] {
                    uid});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginResetUserFlag(string uid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ResetUserFlag", new object[] {
                    uid}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndResetUserFlag(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void ResetUserFlagAsync(string uid) {
        this.ResetUserFlagAsync(uid, null);
    }
    
    /// <remarks/>
    public void ResetUserFlagAsync(string uid, object userState) {
        if ((this.ResetUserFlagOperationCompleted == null)) {
            this.ResetUserFlagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetUserFlagOperationCompleted);
        }
        this.InvokeAsync("ResetUserFlag", new object[] {
                    uid}, this.ResetUserFlagOperationCompleted, userState);
    }
    
    private void OnResetUserFlagOperationCompleted(object arg) {
        if ((this.ResetUserFlagCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ResetUserFlagCompleted(this, new ResetUserFlagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBasisCustomerDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public CustDetRetVal GetBasisCustomerDetails(int branch_code, int Customer_no) {
        object[] results = this.Invoke("GetBasisCustomerDetails", new object[] {
                    branch_code,
                    Customer_no});
        return ((CustDetRetVal)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetBasisCustomerDetails(int branch_code, int Customer_no, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetBasisCustomerDetails", new object[] {
                    branch_code,
                    Customer_no}, callback, asyncState);
    }
    
    /// <remarks/>
    public CustDetRetVal EndGetBasisCustomerDetails(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CustDetRetVal)(results[0]));
    }
    
    /// <remarks/>
    public void GetBasisCustomerDetailsAsync(int branch_code, int Customer_no) {
        this.GetBasisCustomerDetailsAsync(branch_code, Customer_no, null);
    }
    
    /// <remarks/>
    public void GetBasisCustomerDetailsAsync(int branch_code, int Customer_no, object userState) {
        if ((this.GetBasisCustomerDetailsOperationCompleted == null)) {
            this.GetBasisCustomerDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBasisCustomerDetailsOperationCompleted);
        }
        this.InvokeAsync("GetBasisCustomerDetails", new object[] {
                    branch_code,
                    Customer_no}, this.GetBasisCustomerDetailsOperationCompleted, userState);
    }
    
    private void OnGetBasisCustomerDetailsOperationCompleted(object arg) {
        if ((this.GetBasisCustomerDetailsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetBasisCustomerDetailsCompleted(this, new GetBasisCustomerDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWithdrawaldetailsfromMobile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataTable GetWithdrawaldetailsfromMobile(string phoneNumber) {
        object[] results = this.Invoke("GetWithdrawaldetailsfromMobile", new object[] {
                    phoneNumber});
        return ((System.Data.DataTable)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetWithdrawaldetailsfromMobile(string phoneNumber, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetWithdrawaldetailsfromMobile", new object[] {
                    phoneNumber}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataTable EndGetWithdrawaldetailsfromMobile(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataTable)(results[0]));
    }
    
    /// <remarks/>
    public void GetWithdrawaldetailsfromMobileAsync(string phoneNumber) {
        this.GetWithdrawaldetailsfromMobileAsync(phoneNumber, null);
    }
    
    /// <remarks/>
    public void GetWithdrawaldetailsfromMobileAsync(string phoneNumber, object userState) {
        if ((this.GetWithdrawaldetailsfromMobileOperationCompleted == null)) {
            this.GetWithdrawaldetailsfromMobileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWithdrawaldetailsfromMobileOperationCompleted);
        }
        this.InvokeAsync("GetWithdrawaldetailsfromMobile", new object[] {
                    phoneNumber}, this.GetWithdrawaldetailsfromMobileOperationCompleted, userState);
    }
    
    private void OnGetWithdrawaldetailsfromMobileOperationCompleted(object arg) {
        if ((this.GetWithdrawaldetailsfromMobileCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetWithdrawaldetailsfromMobileCompleted(this, new GetWithdrawaldetailsfromMobileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBasisCustomerDetailsFullKey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public CustDetRetVal GetBasisCustomerDetailsFullKey(int branch_code, int Customer_no, int curcode, int ledcode, int subacctcode) {
        object[] results = this.Invoke("GetBasisCustomerDetailsFullKey", new object[] {
                    branch_code,
                    Customer_no,
                    curcode,
                    ledcode,
                    subacctcode});
        return ((CustDetRetVal)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetBasisCustomerDetailsFullKey(int branch_code, int Customer_no, int curcode, int ledcode, int subacctcode, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetBasisCustomerDetailsFullKey", new object[] {
                    branch_code,
                    Customer_no,
                    curcode,
                    ledcode,
                    subacctcode}, callback, asyncState);
    }
    
    /// <remarks/>
    public CustDetRetVal EndGetBasisCustomerDetailsFullKey(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CustDetRetVal)(results[0]));
    }
    
    /// <remarks/>
    public void GetBasisCustomerDetailsFullKeyAsync(int branch_code, int Customer_no, int curcode, int ledcode, int subacctcode) {
        this.GetBasisCustomerDetailsFullKeyAsync(branch_code, Customer_no, curcode, ledcode, subacctcode, null);
    }
    
    /// <remarks/>
    public void GetBasisCustomerDetailsFullKeyAsync(int branch_code, int Customer_no, int curcode, int ledcode, int subacctcode, object userState) {
        if ((this.GetBasisCustomerDetailsFullKeyOperationCompleted == null)) {
            this.GetBasisCustomerDetailsFullKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBasisCustomerDetailsFullKeyOperationCompleted);
        }
        this.InvokeAsync("GetBasisCustomerDetailsFullKey", new object[] {
                    branch_code,
                    Customer_no,
                    curcode,
                    ledcode,
                    subacctcode}, this.GetBasisCustomerDetailsFullKeyOperationCompleted, userState);
    }
    
    private void OnGetBasisCustomerDetailsFullKeyOperationCompleted(object arg) {
        if ((this.GetBasisCustomerDetailsFullKeyCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetBasisCustomerDetailsFullKeyCompleted(this, new GetBasisCustomerDetailsFullKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBasisTellerTillAcct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetBasisTellerTillAcct(string bracode, string tellerid, string curcode) {
        object[] results = this.Invoke("GetBasisTellerTillAcct", new object[] {
                    bracode,
                    tellerid,
                    curcode});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetBasisTellerTillAcct(string bracode, string tellerid, string curcode, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetBasisTellerTillAcct", new object[] {
                    bracode,
                    tellerid,
                    curcode}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetBasisTellerTillAcct(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetBasisTellerTillAcctAsync(string bracode, string tellerid, string curcode) {
        this.GetBasisTellerTillAcctAsync(bracode, tellerid, curcode, null);
    }
    
    /// <remarks/>
    public void GetBasisTellerTillAcctAsync(string bracode, string tellerid, string curcode, object userState) {
        if ((this.GetBasisTellerTillAcctOperationCompleted == null)) {
            this.GetBasisTellerTillAcctOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBasisTellerTillAcctOperationCompleted);
        }
        this.InvokeAsync("GetBasisTellerTillAcct", new object[] {
                    bracode,
                    tellerid,
                    curcode}, this.GetBasisTellerTillAcctOperationCompleted, userState);
    }
    
    private void OnGetBasisTellerTillAcctOperationCompleted(object arg) {
        if ((this.GetBasisTellerTillAcctCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetBasisTellerTillAcctCompleted(this, new GetBasisTellerTillAcctCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getTellerLimitPinPad", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string getTellerLimitPinPad() {
        object[] results = this.Invoke("getTellerLimitPinPad", new object[0]);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetTellerLimitPinPad(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getTellerLimitPinPad", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetTellerLimitPinPad(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getTellerLimitPinPadAsync() {
        this.getTellerLimitPinPadAsync(null);
    }
    
    /// <remarks/>
    public void getTellerLimitPinPadAsync(object userState) {
        if ((this.getTellerLimitPinPadOperationCompleted == null)) {
            this.getTellerLimitPinPadOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTellerLimitPinPadOperationCompleted);
        }
        this.InvokeAsync("getTellerLimitPinPad", new object[0], this.getTellerLimitPinPadOperationCompleted, userState);
    }
    
    private void OngetTellerLimitPinPadOperationCompleted(object arg) {
        if ((this.getTellerLimitPinPadCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getTellerLimitPinPadCompleted(this, new getTellerLimitPinPadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPinPadValues", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string[] getPinPadValues() {
        object[] results = this.Invoke("getPinPadValues", new object[0]);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetPinPadValues(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getPinPadValues", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string[] EndgetPinPadValues(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public void getPinPadValuesAsync() {
        this.getPinPadValuesAsync(null);
    }
    
    /// <remarks/>
    public void getPinPadValuesAsync(object userState) {
        if ((this.getPinPadValuesOperationCompleted == null)) {
            this.getPinPadValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPinPadValuesOperationCompleted);
        }
        this.InvokeAsync("getPinPadValues", new object[0], this.getPinPadValuesOperationCompleted, userState);
    }
    
    private void OngetPinPadValuesOperationCompleted(object arg) {
        if ((this.getPinPadValuesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getPinPadValuesCompleted(this, new getPinPadValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getTransactionHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataTable getTransactionHistory(string bracode, string cusnum, string curcode, string ledcode, string subacctcode, string startdate, string enddate) {
        object[] results = this.Invoke("getTransactionHistory", new object[] {
                    bracode,
                    cusnum,
                    curcode,
                    ledcode,
                    subacctcode,
                    startdate,
                    enddate});
        return ((System.Data.DataTable)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetTransactionHistory(string bracode, string cusnum, string curcode, string ledcode, string subacctcode, string startdate, string enddate, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getTransactionHistory", new object[] {
                    bracode,
                    cusnum,
                    curcode,
                    ledcode,
                    subacctcode,
                    startdate,
                    enddate}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataTable EndgetTransactionHistory(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataTable)(results[0]));
    }
    
    /// <remarks/>
    public void getTransactionHistoryAsync(string bracode, string cusnum, string curcode, string ledcode, string subacctcode, string startdate, string enddate) {
        this.getTransactionHistoryAsync(bracode, cusnum, curcode, ledcode, subacctcode, startdate, enddate, null);
    }
    
    /// <remarks/>
    public void getTransactionHistoryAsync(string bracode, string cusnum, string curcode, string ledcode, string subacctcode, string startdate, string enddate, object userState) {
        if ((this.getTransactionHistoryOperationCompleted == null)) {
            this.getTransactionHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionHistoryOperationCompleted);
        }
        this.InvokeAsync("getTransactionHistory", new object[] {
                    bracode,
                    cusnum,
                    curcode,
                    ledcode,
                    subacctcode,
                    startdate,
                    enddate}, this.getTransactionHistoryOperationCompleted, userState);
    }
    
    private void OngetTransactionHistoryOperationCompleted(object arg) {
        if ((this.getTransactionHistoryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getTransactionHistoryCompleted(this, new getTransactionHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getTranSeq", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string getTranSeq(string origbracode, string accountno, string remark, string expl_code) {
        object[] results = this.Invoke("getTranSeq", new object[] {
                    origbracode,
                    accountno,
                    remark,
                    expl_code});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetTranSeq(string origbracode, string accountno, string remark, string expl_code, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getTranSeq", new object[] {
                    origbracode,
                    accountno,
                    remark,
                    expl_code}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetTranSeq(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getTranSeqAsync(string origbracode, string accountno, string remark, string expl_code) {
        this.getTranSeqAsync(origbracode, accountno, remark, expl_code, null);
    }
    
    /// <remarks/>
    public void getTranSeqAsync(string origbracode, string accountno, string remark, string expl_code, object userState) {
        if ((this.getTranSeqOperationCompleted == null)) {
            this.getTranSeqOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTranSeqOperationCompleted);
        }
        this.InvokeAsync("getTranSeq", new object[] {
                    origbracode,
                    accountno,
                    remark,
                    expl_code}, this.getTranSeqOperationCompleted, userState);
    }
    
    private void OngetTranSeqOperationCompleted(object arg) {
        if ((this.getTranSeqCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getTranSeqCompleted(this, new getTranSeqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBranchTeller", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataTable GetBranchTeller(string bracode) {
        object[] results = this.Invoke("GetBranchTeller", new object[] {
                    bracode});
        return ((System.Data.DataTable)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetBranchTeller(string bracode, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetBranchTeller", new object[] {
                    bracode}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataTable EndGetBranchTeller(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataTable)(results[0]));
    }
    
    /// <remarks/>
    public void GetBranchTellerAsync(string bracode) {
        this.GetBranchTellerAsync(bracode, null);
    }
    
    /// <remarks/>
    public void GetBranchTellerAsync(string bracode, object userState) {
        if ((this.GetBranchTellerOperationCompleted == null)) {
            this.GetBranchTellerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBranchTellerOperationCompleted);
        }
        this.InvokeAsync("GetBranchTeller", new object[] {
                    bracode}, this.GetBranchTellerOperationCompleted, userState);
    }
    
    private void OnGetBranchTellerOperationCompleted(object arg) {
        if ((this.GetBranchTellerCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetBranchTellerCompleted(this, new GetBranchTellerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckForPendingTransTeller", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataTable CheckForPendingTransTeller(string bra_code, string teller_id, int isopshead) {
        object[] results = this.Invoke("CheckForPendingTransTeller", new object[] {
                    bra_code,
                    teller_id,
                    isopshead});
        return ((System.Data.DataTable)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCheckForPendingTransTeller(string bra_code, string teller_id, int isopshead, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CheckForPendingTransTeller", new object[] {
                    bra_code,
                    teller_id,
                    isopshead}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataTable EndCheckForPendingTransTeller(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataTable)(results[0]));
    }
    
    /// <remarks/>
    public void CheckForPendingTransTellerAsync(string bra_code, string teller_id, int isopshead) {
        this.CheckForPendingTransTellerAsync(bra_code, teller_id, isopshead, null);
    }
    
    /// <remarks/>
    public void CheckForPendingTransTellerAsync(string bra_code, string teller_id, int isopshead, object userState) {
        if ((this.CheckForPendingTransTellerOperationCompleted == null)) {
            this.CheckForPendingTransTellerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckForPendingTransTellerOperationCompleted);
        }
        this.InvokeAsync("CheckForPendingTransTeller", new object[] {
                    bra_code,
                    teller_id,
                    isopshead}, this.CheckForPendingTransTellerOperationCompleted, userState);
    }
    
    private void OnCheckForPendingTransTellerOperationCompleted(object arg) {
        if ((this.CheckForPendingTransTellerCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CheckForPendingTransTellerCompleted(this, new CheckForPendingTransTellerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getcusDepositDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string[] getcusDepositDetails(string nubanaccount) {
        object[] results = this.Invoke("getcusDepositDetails", new object[] {
                    nubanaccount});
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetcusDepositDetails(string nubanaccount, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getcusDepositDetails", new object[] {
                    nubanaccount}, callback, asyncState);
    }
    
    /// <remarks/>
    public string[] EndgetcusDepositDetails(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public void getcusDepositDetailsAsync(string nubanaccount) {
        this.getcusDepositDetailsAsync(nubanaccount, null);
    }
    
    /// <remarks/>
    public void getcusDepositDetailsAsync(string nubanaccount, object userState) {
        if ((this.getcusDepositDetailsOperationCompleted == null)) {
            this.getcusDepositDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetcusDepositDetailsOperationCompleted);
        }
        this.InvokeAsync("getcusDepositDetails", new object[] {
                    nubanaccount}, this.getcusDepositDetailsOperationCompleted, userState);
    }
    
    private void OngetcusDepositDetailsOperationCompleted(object arg) {
        if ((this.getcusDepositDetailsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getcusDepositDetailsCompleted(this, new getcusDepositDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
public partial class CustDetRetVal {
    
    private string custdetField;
    
    private object[] pictureField;
    
    private string[] accountsField;
    
    private string[] mandatesField;
    
    /// <remarks/>
    public string custdet {
        get {
            return this.custdetField;
        }
        set {
            this.custdetField = value;
        }
    }
    
    /// <remarks/>
    public object[] picture {
        get {
            return this.pictureField;
        }
        set {
            this.pictureField = value;
        }
    }
    
    /// <remarks/>
    public string[] Accounts {
        get {
            return this.accountsField;
        }
        set {
            this.accountsField = value;
        }
    }
    
    /// <remarks/>
    public string[] Mandates {
        get {
            return this.mandatesField;
        }
        set {
            this.mandatesField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
public partial class FingerPrintVerificationResponse {
    
    private bool validFingerPrintField;
    
    private string descriptionField;
    
    /// <remarks/>
    public bool ValidFingerPrint {
        get {
            return this.validFingerPrintField;
        }
        set {
            this.validFingerPrintField = value;
        }
    }
    
    /// <remarks/>
    public string Description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
public partial class FingerImage {
    
    private string typeField;
    
    private string positionField;
    
    private string nist_impression_typeField;
    
    private string valueField;
    
    /// <remarks/>
    public string type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    public string position {
        get {
            return this.positionField;
        }
        set {
            this.positionField = value;
        }
    }
    
    /// <remarks/>
    public string nist_impression_type {
        get {
            return this.nist_impression_typeField;
        }
        set {
            this.nist_impression_typeField = value;
        }
    }
    
    /// <remarks/>
    public string value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
public partial class FingerPrintModel {
    
    private string bVNField;
    
    private string deviceIdField;
    
    private string referenceNumberField;
    
    private FingerImage fingerImageField;
    
    /// <remarks/>
    public string BVN {
        get {
            return this.bVNField;
        }
        set {
            this.bVNField = value;
        }
    }
    
    /// <remarks/>
    public string DeviceId {
        get {
            return this.deviceIdField;
        }
        set {
            this.deviceIdField = value;
        }
    }
    
    /// <remarks/>
    public string ReferenceNumber {
        get {
            return this.referenceNumberField;
        }
        set {
            this.referenceNumberField = value;
        }
    }
    
    /// <remarks/>
    public FingerImage FingerImage {
        get {
            return this.fingerImageField;
        }
        set {
            this.fingerImageField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
public partial class FingerPrintVerificationRequest {
    
    private string nubanField;
    
    private FingerPrintModel fingerPrintField;
    
    /// <remarks/>
    public string Nuban {
        get {
            return this.nubanField;
        }
        set {
            this.nubanField = value;
        }
    }
    
    /// <remarks/>
    public FingerPrintModel FingerPrint {
        get {
            return this.fingerPrintField;
        }
        set {
            this.fingerPrintField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void getcusDepositDetailsOldAccountCompletedEventHandler(object sender, getcusDepositDetailsOldAccountCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getcusDepositDetailsOldAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getcusDepositDetailsOldAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void ConvertToNubanCompletedEventHandler(object sender, ConvertToNubanCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ConvertToNubanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ConvertToNubanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void ConvertToOldAccountNumberCompletedEventHandler(object sender, ConvertToOldAccountNumberCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ConvertToOldAccountNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ConvertToOldAccountNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void getCustomerIDCompletedEventHandler(object sender, getCustomerIDCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getCustomerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getCustomerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void getLogosCompletedEventHandler(object sender, getLogosCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getLogosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getLogosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public object[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((object[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void InitiateTransactionCompletedEventHandler(object sender, InitiateTransactionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InitiateTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal InitiateTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ulong Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ulong)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void InitiateTransactionOfflineCompletedEventHandler(object sender, InitiateTransactionOfflineCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InitiateTransactionOfflineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal InitiateTransactionOfflineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ulong Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ulong)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void UpdateTransactionCompletedEventHandler(object sender, UpdateTransactionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UpdateTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal UpdateTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ulong Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ulong)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void UpdateTransactionForApprovalCompletedEventHandler(object sender, UpdateTransactionForApprovalCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UpdateTransactionForApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal UpdateTransactionForApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ulong Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ulong)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void getOnlineDepositPendingDataCompletedEventHandler(object sender, getOnlineDepositPendingDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getOnlineDepositPendingDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getOnlineDepositPendingDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataTable Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataTable)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void getOnlineWithdrawalPendingDataCompletedEventHandler(object sender, getOnlineWithdrawalPendingDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getOnlineWithdrawalPendingDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getOnlineWithdrawalPendingDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataTable Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataTable)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void getOnlinePendingPrintingDataCompletedEventHandler(object sender, getOnlinePendingPrintingDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getOnlinePendingPrintingDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getOnlinePendingPrintingDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataTable Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataTable)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void getReceiptResetPendingDataCompletedEventHandler(object sender, getReceiptResetPendingDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getReceiptResetPendingDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getReceiptResetPendingDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataTable Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataTable)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void getPinPadTransactionHistoryCompletedEventHandler(object sender, getPinPadTransactionHistoryCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getPinPadTransactionHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getPinPadTransactionHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataTable Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataTable)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void UpdateTransactionForReceiptReprintCompletedEventHandler(object sender, UpdateTransactionForReceiptReprintCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UpdateTransactionForReceiptReprintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal UpdateTransactionForReceiptReprintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ulong Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ulong)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void UpdatePrintStatusCompletedEventHandler(object sender, UpdatePrintStatusCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UpdatePrintStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal UpdatePrintStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void InsertIntoCentralDBCompletedEventHandler(object sender, InsertIntoCentralDBCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class InsertIntoCentralDBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal InsertIntoCentralDBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void IsInProgressCompletedEventHandler(object sender, IsInProgressCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class IsInProgressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal IsInProgressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void getOIOpportunitiesCompletedEventHandler(object sender, getOIOpportunitiesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getOIOpportunitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getOIOpportunitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataTable Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataTable)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void UpdateOIOpportunitiesCompletedEventHandler(object sender, UpdateOIOpportunitiesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UpdateOIOpportunitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal UpdateOIOpportunitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void UpdateOISelectionbyTellerCompletedEventHandler(object sender, UpdateOISelectionbyTellerCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UpdateOISelectionbyTellerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal UpdateOISelectionbyTellerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void FastTrackGetPendingCompletedEventHandler(object sender, FastTrackGetPendingCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class FastTrackGetPendingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal FastTrackGetPendingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataTable Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataTable)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void FastTrackUpdateTellerCompletedEventHandler(object sender, FastTrackUpdateTellerCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class FastTrackUpdateTellerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal FastTrackUpdateTellerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void FastTrackUpdateSupervisorCompletedEventHandler(object sender, FastTrackUpdateSupervisorCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class FastTrackUpdateSupervisorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal FastTrackUpdateSupervisorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void GetNubanAccountWithFundsCompletedEventHandler(object sender, GetNubanAccountWithFundsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetNubanAccountWithFundsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetNubanAccountWithFundsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void GetVerificationResponseCompletedEventHandler(object sender, GetVerificationResponseCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetVerificationResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetVerificationResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public FingerPrintVerificationResponse Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((FingerPrintVerificationResponse)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void checkrestrictionCompletedEventHandler(object sender, checkrestrictionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class checkrestrictionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal checkrestrictionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void checkrestrictionBraCusCompletedEventHandler(object sender, checkrestrictionBraCusCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class checkrestrictionBraCusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal checkrestrictionBraCusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void GetAccountdetailsfromPhoneCompletedEventHandler(object sender, GetAccountdetailsfromPhoneCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetAccountdetailsfromPhoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetAccountdetailsfromPhoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataTable Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataTable)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void EncryptCompletedEventHandler(object sender, EncryptCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class EncryptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal EncryptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void ValidateEncryptedAdminUserCompletedEventHandler(object sender, ValidateEncryptedAdminUserCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ValidateEncryptedAdminUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ValidateEncryptedAdminUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void ValidateAdminUserOffSiteCompletedEventHandler(object sender, ValidateAdminUserOffSiteCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ValidateAdminUserOffSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ValidateAdminUserOffSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void ValidateAdminUserOffSitewithAppverCompletedEventHandler(object sender, ValidateAdminUserOffSitewithAppverCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ValidateAdminUserOffSitewithAppverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ValidateAdminUserOffSitewithAppverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void ValidateUserCompletedEventHandler(object sender, ValidateUserCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ValidateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ValidateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void GetCustomerNameCompletedEventHandler(object sender, GetCustomerNameCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetCustomerNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetCustomerNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void TransferCompletedEventHandler(object sender, TransferCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal TransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void TransferChargesandVATCompletedEventHandler(object sender, TransferChargesandVATCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TransferChargesandVATCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal TransferChargesandVATCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void TransferChargesCompletedEventHandler(object sender, TransferChargesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TransferChargesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal TransferChargesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void SendSMSCompletedEventHandler(object sender, SendSMSCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SendSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal SendSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void SendEmailCompletedEventHandler(object sender, SendEmailCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SendEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal SendEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void GetApplicationRoleUsersCompletedEventHandler(object sender, GetApplicationRoleUsersCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetApplicationRoleUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetApplicationRoleUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void GetCustomerDetailsCompletedEventHandler(object sender, GetCustomerDetailsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetCustomerDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetCustomerDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void ValidateAccountCompletedEventHandler(object sender, ValidateAccountCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ValidateAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ValidateAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void CheckUserFlagCompletedEventHandler(object sender, CheckUserFlagCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CheckUserFlagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CheckUserFlagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void ResetUserFlagCompletedEventHandler(object sender, ResetUserFlagCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ResetUserFlagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ResetUserFlagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void GetBasisCustomerDetailsCompletedEventHandler(object sender, GetBasisCustomerDetailsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetBasisCustomerDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetBasisCustomerDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CustDetRetVal Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CustDetRetVal)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void GetWithdrawaldetailsfromMobileCompletedEventHandler(object sender, GetWithdrawaldetailsfromMobileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetWithdrawaldetailsfromMobileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetWithdrawaldetailsfromMobileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataTable Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataTable)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void GetBasisCustomerDetailsFullKeyCompletedEventHandler(object sender, GetBasisCustomerDetailsFullKeyCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetBasisCustomerDetailsFullKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetBasisCustomerDetailsFullKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CustDetRetVal Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CustDetRetVal)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void GetBasisTellerTillAcctCompletedEventHandler(object sender, GetBasisTellerTillAcctCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetBasisTellerTillAcctCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetBasisTellerTillAcctCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void getTellerLimitPinPadCompletedEventHandler(object sender, getTellerLimitPinPadCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getTellerLimitPinPadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getTellerLimitPinPadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void getPinPadValuesCompletedEventHandler(object sender, getPinPadValuesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getPinPadValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getPinPadValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void getTransactionHistoryCompletedEventHandler(object sender, getTransactionHistoryCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getTransactionHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getTransactionHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataTable Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataTable)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void getTranSeqCompletedEventHandler(object sender, getTranSeqCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getTranSeqCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getTranSeqCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void GetBranchTellerCompletedEventHandler(object sender, GetBranchTellerCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetBranchTellerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetBranchTellerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataTable Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataTable)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void CheckForPendingTransTellerCompletedEventHandler(object sender, CheckForPendingTransTellerCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CheckForPendingTransTellerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CheckForPendingTransTellerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataTable Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataTable)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
public delegate void getcusDepositDetailsCompletedEventHandler(object sender, getcusDepositDetailsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getcusDepositDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getcusDepositDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}
